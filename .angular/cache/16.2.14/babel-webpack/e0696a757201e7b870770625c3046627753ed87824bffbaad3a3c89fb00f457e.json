{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/pettype.services\";\nimport * as i4 from \"../services/petBreed.service\";\nimport * as i5 from \"@angular/common\";\nfunction AddBreedComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const petType_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", petType_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(petType_r3.name);\n  }\n}\nfunction AddBreedComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Pet Type is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddBreedComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, AddBreedComponent_div_9_div_1_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.newForm.get(\"petTypeId\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction AddBreedComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddBreedComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, AddBreedComponent_div_14_div_1_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.newForm.get(\"name\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nexport class AddBreedComponent {\n  constructor(fb, router, petTypeService, petBreedService) {\n    this.fb = fb;\n    this.router = router;\n    this.petTypeService = petTypeService;\n    this.petBreedService = petBreedService;\n    this.petTypes = [];\n    this.newForm = this.fb.group({\n      petTypeId: ['', Validators.required],\n      name: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.loadPetTypes();\n  }\n  loadPetTypes() {\n    this.petTypeService.getAllPetTypes().subscribe(petTypes => {\n      this.petTypes = petTypes;\n    }, error => {\n      console.error('Error fetching pet types:', error);\n    });\n  }\n  onSubmit() {\n    if (this.newForm.valid) {\n      const petTypeId = this.newForm.value.petTypeId;\n      const name = this.newForm.value.name;\n      const newBreedRequest = {\n        petTypeId: petTypeId,\n        name: name,\n        id: 0\n      };\n      this.petBreedService.createPetBreed(newBreedRequest).subscribe(() => {\n        console.log('Breed added successfully');\n        alert('Breed added successfully');\n        this.router.navigate(['/breed-list']);\n      }, error => {\n        console.error('Error adding breed:', error);\n        alert('Failed to add breed');\n      });\n    } else {\n      this.newForm.markAllAsTouched();\n    }\n  }\n  static #_ = this.ɵfac = function AddBreedComponent_Factory(t) {\n    return new (t || AddBreedComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.PetTypeService), i0.ɵɵdirectiveInject(i4.PetBreedService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddBreedComponent,\n    selectors: [[\"app-add-breed\"]],\n    decls: 19,\n    vars: 5,\n    consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"petTypeId\"], [\"id\", \"petTypeId\", \"formControlName\", \"petTypeId\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mr-2\", 3, \"disabled\"], [\"routerLink\", \"/breeds\", 1, \"btn\", \"btn-outline-secondary\"], [3, \"value\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n    template: function AddBreedComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Add New Breed\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AddBreedComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Pet Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"select\", 4);\n        i0.ɵɵtemplate(8, AddBreedComponent_option_8_Template, 2, 2, \"option\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, AddBreedComponent_div_9_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\", 7);\n        i0.ɵɵtext(12, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 8);\n        i0.ɵɵtemplate(14, AddBreedComponent_div_14_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 9);\n        i0.ɵɵtext(16, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"a\", 10);\n        i0.ɵɵtext(18, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        let tmp_2_0;\n        let tmp_3_0;\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.newForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.petTypes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.newForm.get(\"petTypeId\")) == null ? null : tmp_2_0.invalid) && (((tmp_2_0 = ctx.newForm.get(\"petTypeId\")) == null ? null : tmp_2_0.dirty) || ((tmp_2_0 = ctx.newForm.get(\"petTypeId\")) == null ? null : tmp_2_0.touched)));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.newForm.get(\"name\")) == null ? null : tmp_3_0.invalid) && (((tmp_3_0 = ctx.newForm.get(\"name\")) == null ? null : tmp_3_0.dirty) || ((tmp_3_0 = ctx.newForm.get(\"name\")) == null ? null : tmp_3_0.touched)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.newForm.invalid);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i2.RouterLink, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","petType_r3","id","ɵɵadvance","ɵɵtextInterpolate","name","ɵɵtemplate","AddBreedComponent_div_9_div_1_Template","tmp_0_0","ctx_r1","newForm","get","errors","AddBreedComponent_div_14_div_1_Template","ctx_r2","AddBreedComponent","constructor","fb","router","petTypeService","petBreedService","petTypes","group","petTypeId","required","ngOnInit","loadPetTypes","getAllPetTypes","subscribe","error","console","onSubmit","valid","value","newBreedRequest","createPetBreed","log","alert","navigate","markAllAsTouched","_","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","PetTypeService","i4","PetBreedService","_2","selectors","decls","vars","consts","template","AddBreedComponent_Template","rf","ctx","ɵɵlistener","AddBreedComponent_Template_form_ngSubmit_3_listener","AddBreedComponent_option_8_Template","AddBreedComponent_div_9_Template","ɵɵelement","AddBreedComponent_div_14_Template","tmp_2_0","invalid","dirty","touched","tmp_3_0"],"sources":["E:\\pets-appoinments-app\\src\\app\\add-breed\\add-breed.component.ts","E:\\pets-appoinments-app\\src\\app\\add-breed\\add-breed.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { PetTypeResponseModel } from '../models/response.models';\nimport { PetTypeService } from '../services/pettype.services';\nimport { PetBreedService } from '../services/petBreed.service';\nimport { PetBreedRequestModel } from '../models/request.models';\n\n@Component({\n  selector: 'app-add-breed',\n  templateUrl: './add-breed.component.html',\n  styleUrls: ['./add-breed.component.css']\n})\nexport class AddBreedComponent implements OnInit {\n  newForm: FormGroup;\n  petTypes: PetTypeResponseModel[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private petTypeService: PetTypeService,\n    private petBreedService: PetBreedService\n  ) {\n    this.newForm = this.fb.group({\n      petTypeId: ['', Validators.required],\n      name: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadPetTypes();\n  }\n\n  loadPetTypes(): void {\n    this.petTypeService.getAllPetTypes().subscribe(\n      (petTypes: PetTypeResponseModel[]) => {\n        this.petTypes = petTypes;\n      },\n      (error) => {\n        console.error('Error fetching pet types:', error);\n      }\n    );\n  }\n\n  onSubmit(): void {\n    if (this.newForm.valid) {\n      const petTypeId = this.newForm.value.petTypeId;\n      const name = this.newForm.value.name;\n\n      const newBreedRequest : PetBreedRequestModel = {\n        petTypeId: petTypeId,\n        name: name,\n        id: 0\n      };\n\n      this.petBreedService.createPetBreed(newBreedRequest).subscribe(\n        () => {\n          console.log('Breed added successfully');\n          alert('Breed added successfully');\n          this.router.navigate(['/breed-list']);\n        },\n        (error) => {\n          console.error('Error adding breed:', error);\n          alert('Failed to add breed');\n        }\n      );\n    } else {\n      this.newForm.markAllAsTouched();\n    }\n  }\n}\n","<div class=\"container\">\n  <h2>Add New Breed</h2>\n  <form [formGroup]=\"newForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"petTypeId\">Pet Type</label>\n      <select id=\"petTypeId\" class=\"form-control\" formControlName=\"petTypeId\">\n        <option *ngFor=\"let petType of petTypes\" [value]=\"petType.id\">{{ petType.name }}</option>\n      </select>\n      <div *ngIf=\"newForm.get('petTypeId')?.invalid && (newForm.get('petTypeId')?.dirty || newForm.get('petTypeId')?.touched)\" class=\"invalid-feedback\">\n        <div *ngIf=\"newForm.get('petTypeId')?.errors?.['required']\">\n          Pet Type is required.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Name</label>\n      <input type=\"text\" id=\"name\" class=\"form-control\" formControlName=\"name\">\n      <div *ngIf=\"newForm.get('name')?.invalid && (newForm.get('name')?.dirty || newForm.get('name')?.touched)\" class=\"invalid-feedback\">\n        <div *ngIf=\"newForm.get('name')?.errors?.['required']\">\n          Name is required.\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary mr-2\" [disabled]=\"newForm.invalid\">Save</button>\n    <a routerLink=\"/breeds\" class=\"btn btn-outline-secondary\">Cancel</a>\n  </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}