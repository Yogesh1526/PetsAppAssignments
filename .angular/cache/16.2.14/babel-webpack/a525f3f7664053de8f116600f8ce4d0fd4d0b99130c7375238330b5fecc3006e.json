{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction AddPetTypeComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPetTypeComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, AddPetTypeComponent_div_8_div_1_Template, 2, 0, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.newForm.get(\"name\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nexport class AddPetTypeComponent {\n  constructor(fb, router) {\n    this.fb = fb;\n    this.router = router;\n    this.newForm = this.fb.group({\n      name: ['', Validators.required]\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    if (this.newForm.valid) {\n      // Simulate saving the pet type data\n      console.log('Pet Type data:', this.newForm.value);\n      this.router.navigate(['/pet-types']);\n    } else {\n      Object.keys(this.newForm.controls).forEach(field => {\n        const control = this.newForm.get(field);\n        control?.markAsTouched({\n          onlySelf: true\n        });\n      });\n    }\n  }\n  static #_ = this.ɵfac = function AddPetTypeComponent_Factory(t) {\n    return new (t || AddPetTypeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddPetTypeComponent,\n    selectors: [[\"app-add-pet-type\"]],\n    decls: 13,\n    vars: 3,\n    consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mr-2\", 3, \"disabled\"], [\"routerLink\", \"/pet-types\", 1, \"btn\", \"btn-outline-secondary\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n    template: function AddPetTypeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Add New Pet Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AddPetTypeComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵtemplate(8, AddPetTypeComponent_div_8_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 6);\n        i0.ɵɵtext(10, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"a\", 7);\n        i0.ɵɵtext(12, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.newForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.newForm.get(\"name\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.newForm.get(\"name\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.newForm.get(\"name\")) == null ? null : tmp_1_0.touched)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.newForm.invalid);\n      }\n    },\n    dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i2.RouterLink, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AddPetTypeComponent_div_8_div_1_Template","ɵɵadvance","ɵɵproperty","tmp_0_0","ctx_r0","newForm","get","errors","AddPetTypeComponent","constructor","fb","router","group","name","required","ngOnInit","onSubmit","valid","console","log","value","navigate","Object","keys","controls","forEach","field","control","markAsTouched","onlySelf","_","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","_2","selectors","decls","vars","consts","template","AddPetTypeComponent_Template","rf","ctx","ɵɵlistener","AddPetTypeComponent_Template_form_ngSubmit_3_listener","ɵɵelement","AddPetTypeComponent_div_8_Template","tmp_1_0","invalid","dirty","touched"],"sources":["E:\\pets-appoinments-app\\src\\app\\add-pet-type\\add-pet-type.component.ts","E:\\pets-appoinments-app\\src\\app\\add-pet-type\\add-pet-type.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-pet-type',\n  templateUrl: './add-pet-type.component.html',\n  styleUrls: ['./add-pet-type.component.css']\n})\nexport class AddPetTypeComponent implements OnInit {\n  newForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private router: Router) {\n    this.newForm = this.fb.group({\n      name: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onSubmit(): void {\n    if (this.newForm.valid) {\n      // Simulate saving the pet type data\n      console.log('Pet Type data:', this.newForm.value);\n      this.router.navigate(['/pet-types']);\n    } else {\n      Object.keys(this.newForm.controls).forEach(field => {\n        const control = this.newForm.get(field);\n        control?.markAsTouched({ onlySelf: true });\n      });\n    }\n  }\n}\n","<div class=\"container\">\n    <h2>Add New Pet Type</h2>\n    <form [formGroup]=\"newForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" id=\"name\" class=\"form-control\" formControlName=\"name\">\n        <div *ngIf=\"newForm.get('name')?.invalid && (newForm.get('name')?.dirty || newForm.get('name')?.touched)\" class=\"invalid-feedback\">\n          <div *ngIf=\"newForm.get('name')?.errors?.['required']\">\n            Name is required.\n          </div>\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary mr-2\" [disabled]=\"newForm.invalid\">Save</button>\n      <a routerLink=\"/pet-types\" class=\"btn btn-outline-secondary\">Cancel</a>\n    </form>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}