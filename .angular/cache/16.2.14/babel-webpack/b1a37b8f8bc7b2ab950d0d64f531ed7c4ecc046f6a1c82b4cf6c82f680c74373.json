{"ast":null,"code":"import { catchError, map } from 'rxjs/operators';\nimport { BaseService } from './BaseService.services';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PetService extends BaseService {\n  constructor(http) {\n    super(http);\n    this.http = http;\n  }\n  getPet(petId) {\n    return this.get(`pet/${petId}`).pipe(map(response => response.data), catchError(this.handleError));\n  }\n  getAllPets() {\n    return this.get('pet').pipe(map(response => response.data), catchError(this.handleError));\n  }\n  createPet(pet) {\n    return this.post('pet', pet).pipe(map(response => response.data), catchError(this.handleError));\n  }\n  updatePet(pet) {\n    return this.put(`pet/${pet.id}`, pet).pipe(map(response => response.data), catchError(this.handleError));\n  }\n  deletePet(petId) {\n    return this.delete(`pet/${petId}`).pipe(map(response => response.data), catchError(this.handleError));\n  }\n  static #_ = this.ɵfac = function PetService_Factory(t) {\n    return new (t || PetService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PetService,\n    factory: PetService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["catchError","map","BaseService","PetService","constructor","http","getPet","petId","get","pipe","response","data","handleError","getAllPets","createPet","pet","post","updatePet","put","id","deletePet","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\pets-appoinments-app\\src\\app\\services\\pet.services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { PetRequestModel } from '../models/request.models';\r\nimport { PetResponseModel, APIResponseModel } from '../models/response.models';\r\nimport { BaseService } from './BaseService.services';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PetService extends BaseService {\r\n\r\n  constructor(public override http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  getPet(petId: number): Observable<PetResponseModel> {\r\n    return this.get<APIResponseModel<PetResponseModel>>(`pet/${petId}`)\r\n      .pipe(\r\n        map(response => response.data as PetResponseModel),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getAllPets(): Observable<PetResponseModel[]> {\r\n    return this.get<APIResponseModel<PetResponseModel[]>>('pet')\r\n      .pipe(\r\n        map(response => response.data as PetResponseModel[]),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  createPet(pet: PetRequestModel): Observable<boolean> {\r\n    return this.post<APIResponseModel<boolean>>('pet', pet)\r\n      .pipe(\r\n        map(response => response.data as boolean),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  updatePet(pet: PetRequestModel): Observable<boolean> {\r\n    return this.put<APIResponseModel<boolean>>(`pet/${pet.id}`, pet)\r\n      .pipe(\r\n        map(response => response.data as boolean),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  deletePet(petId: number): Observable<boolean> {\r\n    return this.delete<APIResponseModel<boolean>>(`pet/${petId}`)\r\n      .pipe(\r\n        map(response => response.data as boolean),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n}\r\n"],"mappings":"AAGA,SAASA,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;AAGhD,SAASC,WAAW,QAAQ,wBAAwB;;;AAKpD,OAAM,MAAOC,UAAW,SAAQD,WAAW;EAEzCE,YAA4BC,IAAgB;IAC1C,KAAK,CAACA,IAAI,CAAC;IADe,KAAAA,IAAI,GAAJA,IAAI;EAEhC;EAEAC,MAAMA,CAACC,KAAa;IAClB,OAAO,IAAI,CAACC,GAAG,CAAqC,OAAOD,KAAK,EAAE,CAAC,CAChEE,IAAI,CACHR,GAAG,CAACS,QAAQ,IAAIA,QAAQ,CAACC,IAAwB,CAAC,EAClDX,UAAU,CAAC,IAAI,CAACY,WAAW,CAAC,CAC7B;EACL;EAEAC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACL,GAAG,CAAuC,KAAK,CAAC,CACzDC,IAAI,CACHR,GAAG,CAACS,QAAQ,IAAIA,QAAQ,CAACC,IAA0B,CAAC,EACpDX,UAAU,CAAC,IAAI,CAACY,WAAW,CAAC,CAC7B;EACL;EAEAE,SAASA,CAACC,GAAoB;IAC5B,OAAO,IAAI,CAACC,IAAI,CAA4B,KAAK,EAAED,GAAG,CAAC,CACpDN,IAAI,CACHR,GAAG,CAACS,QAAQ,IAAIA,QAAQ,CAACC,IAAe,CAAC,EACzCX,UAAU,CAAC,IAAI,CAACY,WAAW,CAAC,CAC7B;EACL;EAEAK,SAASA,CAACF,GAAoB;IAC5B,OAAO,IAAI,CAACG,GAAG,CAA4B,OAAOH,GAAG,CAACI,EAAE,EAAE,EAAEJ,GAAG,CAAC,CAC7DN,IAAI,CACHR,GAAG,CAACS,QAAQ,IAAIA,QAAQ,CAACC,IAAe,CAAC,EACzCX,UAAU,CAAC,IAAI,CAACY,WAAW,CAAC,CAC7B;EACL;EAEAQ,SAASA,CAACb,KAAa;IACrB,OAAO,IAAI,CAACc,MAAM,CAA4B,OAAOd,KAAK,EAAE,CAAC,CAC1DE,IAAI,CACHR,GAAG,CAACS,QAAQ,IAAIA,QAAQ,CAACC,IAAe,CAAC,EACzCX,UAAU,CAAC,IAAI,CAACY,WAAW,CAAC,CAC7B;EACL;EAAC,QAAAU,CAAA,G;qBA5CUnB,UAAU,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVxB,UAAU;IAAAyB,OAAA,EAAVzB,UAAU,CAAA0B,IAAA;IAAAC,UAAA,EAFT;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}