{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport { BaseService } from './BaseService.services';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AddressService extends BaseService {\n  constructor(http) {\n    super(http);\n    this.http = http;\n  }\n  getAddress(addressId) {\n    return this.get(`address/${addressId}`).pipe(map(response => response.data), catchError(this.handleError));\n  }\n  createAddress(address) {\n    return this.post('address', address).pipe(map(response => response.data), catchError(this.handleError));\n  }\n  static #_ = this.ɵfac = function AddressService_Factory(t) {\n    return new (t || AddressService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AddressService,\n    factory: AddressService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["catchError","BaseService","AddressService","constructor","http","getAddress","addressId","get","pipe","map","response","data","handleError","createAddress","address","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\pets-appoinments-app\\src\\app\\services\\Address.services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { BaseService } from './BaseService.services';\r\nimport { APIResponseModel, AddressResponseModel } from '../models/response.models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddressService extends BaseService {\r\n\r\n  constructor(public override http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  getAddress(addressId: number): Observable<AddressResponseModel> {\r\n    return this.get<APIResponseModel<AddressResponseModel>>(`address/${addressId}`)\r\n      .pipe(\r\n        map(response => response.data),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  createAddress(address: AddressRequestModel): Observable<AddressResponseModel> {\r\n    return this.post<APIResponseModel<AddressResponseModel>>('address', address)\r\n      .pipe(\r\n        map(response => response.data),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  // Add other methods as needed\r\n}\r\n"],"mappings":"AAGA,SAASA,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,WAAW,QAAQ,wBAAwB;;;AAMpD,OAAM,MAAOC,cAAe,SAAQD,WAAW;EAE7CE,YAA4BC,IAAgB;IAC1C,KAAK,CAACA,IAAI,CAAC;IADe,KAAAA,IAAI,GAAJA,IAAI;EAEhC;EAEAC,UAAUA,CAACC,SAAiB;IAC1B,OAAO,IAAI,CAACC,GAAG,CAAyC,WAAWD,SAAS,EAAE,CAAC,CAC5EE,IAAI,CACHC,GAAG,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,EAC9BX,UAAU,CAAC,IAAI,CAACY,WAAW,CAAC,CAC7B;EACL;EAEAC,aAAaA,CAACC,OAA4B;IACxC,OAAO,IAAI,CAACC,IAAI,CAAyC,SAAS,EAAED,OAAO,CAAC,CACzEN,IAAI,CACHC,GAAG,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,EAC9BX,UAAU,CAAC,IAAI,CAACY,WAAW,CAAC,CAC7B;EACL;EAAC,QAAAI,CAAA,G;qBApBUd,cAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdnB,cAAc;IAAAoB,OAAA,EAAdpB,cAAc,CAAAqB,IAAA;IAAAC,UAAA,EAFb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}