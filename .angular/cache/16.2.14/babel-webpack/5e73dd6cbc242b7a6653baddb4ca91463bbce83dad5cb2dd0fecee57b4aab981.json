{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let PetListComponent = class PetListComponent {\n  constructor(router, petService) {\n    this.router = router;\n    this.petService = petService;\n    this.pets = [];\n    this.filteredPets = [];\n    this.searchTerm = '';\n  }\n  ngOnInit() {\n    this.fetchPets();\n  }\n  fetchPets() {\n    this.petService.getAllPets().subscribe(pets => {\n      this.pets = pets;\n      this.filteredPets = [...this.pets]; // Initialize filteredPets with fetched pets\n    });\n  }\n\n  filterPets() {\n    const search = this.searchTerm.toLowerCase();\n    this.filteredPets = this.pets.filter(pet => pet.name.toLowerCase().includes(search) || pet.petType.name.toLowerCase().includes(search) ||\n    // Assuming 'name' is the string property in PetTypeResponseModel\n    pet.petBreed.name.toLowerCase().includes(search) ||\n    // Assuming 'name' is the string property in PetBreedResponseModel\n    pet.petOwner.name.toLowerCase().includes(search));\n  }\n  clearSearch() {\n    this.searchTerm = '';\n    this.filterPets();\n  }\n  goToNewPet() {\n    this.router.navigate(['/pets/new']);\n  }\n  editPet(id) {\n    this.router.navigate([`/pets/${id}/edit`]);\n  }\n  deletePet(id) {\n    if (confirm('Are you sure you want to delete this pet?')) {\n      this.petService.deletePet(id).subscribe(() => {\n        console.log(`Deleted pet with ID ${id}`);\n        // Update the pets list after deletion\n        this.fetchPets();\n      }, error => {\n        console.error('Error deleting pet:', error);\n        // Handle error if needed\n      });\n    }\n  }\n};\n\nPetListComponent = __decorate([Component({\n  selector: 'app-pet-list',\n  templateUrl: './pet-list.component.html',\n  styleUrls: ['./pet-list.component.css']\n})], PetListComponent);","map":{"version":3,"names":["Component","PetListComponent","constructor","router","petService","pets","filteredPets","searchTerm","ngOnInit","fetchPets","getAllPets","subscribe","filterPets","search","toLowerCase","filter","pet","name","includes","petType","petBreed","petOwner","clearSearch","goToNewPet","navigate","editPet","id","deletePet","confirm","console","log","error","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\pets-appoinments-app\\src\\app\\pet-list\\pet-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PetResponseModel } from '../models/response.models';\nimport { PetService } from '../services/pet.service';\n\n@Component({\n  selector: 'app-pet-list',\n  templateUrl: './pet-list.component.html',\n  styleUrls: ['./pet-list.component.css']\n})\nexport class PetListComponent implements OnInit {\n  pets: PetResponseModel[] = [];\n  filteredPets: PetResponseModel[] = [];\n  searchTerm: string = '';\n\n  constructor(private router: Router, private petService: PetService) {}\n\n  ngOnInit(): void {\n    this.fetchPets();\n  }\n\n  fetchPets(): void {\n    this.petService.getAllPets().subscribe(pets => {\n      this.pets = pets;\n      this.filteredPets = [...this.pets]; // Initialize filteredPets with fetched pets\n    });\n  }\n\n  filterPets(): void {\n    const search = this.searchTerm.toLowerCase();\n    this.filteredPets = this.pets.filter(pet =>\n      pet.name.toLowerCase().includes(search) ||\n      pet.petType.name.toLowerCase().includes(search) || // Assuming 'name' is the string property in PetTypeResponseModel\n      pet.petBreed.name.toLowerCase().includes(search) || // Assuming 'name' is the string property in PetBreedResponseModel\n      pet.petOwner.name.toLowerCase().includes(search)\n    );\n  }\n\n  clearSearch(): void {\n    this.searchTerm = '';\n    this.filterPets();\n  }\n\n  goToNewPet(): void {\n    this.router.navigate(['/pets/new']);\n  }\n\n  editPet(id: number): void {\n    this.router.navigate([`/pets/${id}/edit`]);\n  }\n\n  deletePet(id: number): void {\n    if (confirm('Are you sure you want to delete this pet?')) {\n      this.petService.deletePet(id).subscribe(() => {\n        console.log(`Deleted pet with ID ${id}`);\n        // Update the pets list after deletion\n        this.fetchPets();\n      }, error => {\n        console.error('Error deleting pet:', error);\n        // Handle error if needed\n      });\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAK3BC,YAAoBC,MAAc,EAAUC,UAAsB;IAA9C,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,UAAU,GAAVA,UAAU;IAJtD,KAAAC,IAAI,GAAuB,EAAE;IAC7B,KAAAC,YAAY,GAAuB,EAAE;IACrC,KAAAC,UAAU,GAAW,EAAE;EAE8C;EAErEC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACL,UAAU,CAACM,UAAU,EAAE,CAACC,SAAS,CAACN,IAAI,IAAG;MAC5C,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACC,YAAY,GAAG,CAAC,GAAG,IAAI,CAACD,IAAI,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC;EACJ;;EAEAO,UAAUA,CAAA;IACR,MAAMC,MAAM,GAAG,IAAI,CAACN,UAAU,CAACO,WAAW,EAAE;IAC5C,IAAI,CAACR,YAAY,GAAG,IAAI,CAACD,IAAI,CAACU,MAAM,CAACC,GAAG,IACtCA,GAAG,CAACC,IAAI,CAACH,WAAW,EAAE,CAACI,QAAQ,CAACL,MAAM,CAAC,IACvCG,GAAG,CAACG,OAAO,CAACF,IAAI,CAACH,WAAW,EAAE,CAACI,QAAQ,CAACL,MAAM,CAAC;IAAI;IACnDG,GAAG,CAACI,QAAQ,CAACH,IAAI,CAACH,WAAW,EAAE,CAACI,QAAQ,CAACL,MAAM,CAAC;IAAI;IACpDG,GAAG,CAACK,QAAQ,CAACJ,IAAI,CAACH,WAAW,EAAE,CAACI,QAAQ,CAACL,MAAM,CAAC,CACjD;EACH;EAEAS,WAAWA,CAAA;IACT,IAAI,CAACf,UAAU,GAAG,EAAE;IACpB,IAAI,CAACK,UAAU,EAAE;EACnB;EAEAW,UAAUA,CAAA;IACR,IAAI,CAACpB,MAAM,CAACqB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;EACrC;EAEAC,OAAOA,CAACC,EAAU;IAChB,IAAI,CAACvB,MAAM,CAACqB,QAAQ,CAAC,CAAC,SAASE,EAAE,OAAO,CAAC,CAAC;EAC5C;EAEAC,SAASA,CAACD,EAAU;IAClB,IAAIE,OAAO,CAAC,2CAA2C,CAAC,EAAE;MACxD,IAAI,CAACxB,UAAU,CAACuB,SAAS,CAACD,EAAE,CAAC,CAACf,SAAS,CAAC,MAAK;QAC3CkB,OAAO,CAACC,GAAG,CAAC,uBAAuBJ,EAAE,EAAE,CAAC;QACxC;QACA,IAAI,CAACjB,SAAS,EAAE;MAClB,CAAC,EAAEsB,KAAK,IAAG;QACTF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C;MACF,CAAC,CAAC;;EAEN;CACD;;AArDY9B,gBAAgB,GAAA+B,UAAA,EAL5BhC,SAAS,CAAC;EACTiC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWlC,gBAAgB,CAqD5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}