{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environments';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BaseService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}`;\n  }\n  get(endpoint) {\n    return this.http.get(`${this.apiUrl}`).pipe(catchError(this.handleError));\n  }\n  post(endpoint, data) {\n    return this.http.post(`${this.apiUrl}`, data).pipe(catchError(this.handleError));\n  }\n  // Add other HTTP methods (put, delete, etc.) as needed\n  handleError(error) {\n    console.error('An error occurred:', error);\n    return throwError('Something went wrong; please try again later.');\n  }\n  static #_ = this.ɵfac = function BaseService_Factory(t) {\n    return new (t || BaseService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BaseService,\n    factory: BaseService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["throwError","catchError","environment","BaseService","constructor","http","apiUrl","get","endpoint","pipe","handleError","post","data","error","console","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\pets-appoinments-app\\src\\app\\services\\BaseService.services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environments';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BaseService {\r\n\r\n    protected apiUrl: string; // Replace with your API URL\r\n\r\n    constructor(protected http: HttpClient) {\r\n      this.apiUrl = `${environment.apiUrl}`;\r\n  }\r\n  \r\n  protected get<T>(endpoint: string): Observable<T> {\r\n    return this.http.get<T>(`${this.apiUrl}`)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  protected post<T>(endpoint: string, data: any): Observable<T> {\r\n    return this.http.post<T>(`${this.apiUrl}`, data)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  // Add other HTTP methods (put, delete, etc.) as needed\r\n\r\n  private handleError(error: any): Observable<never> {\r\n    console.error('An error occurred:', error);\r\n    return throwError('Something went wrong; please try again later.');\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,WAAW,QAAQ,+BAA+B;;;AAK3D,OAAM,MAAOC,WAAW;EAIpBC,YAAsBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACxB,IAAI,CAACC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,EAAE;EACzC;EAEUC,GAAGA,CAAIC,QAAgB;IAC/B,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAI,GAAG,IAAI,CAACD,MAAM,EAAE,CAAC,CACtCG,IAAI,CACHR,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAC7B;EACL;EAEUC,IAAIA,CAAIH,QAAgB,EAAEI,IAAS;IAC3C,OAAO,IAAI,CAACP,IAAI,CAACM,IAAI,CAAI,GAAG,IAAI,CAACL,MAAM,EAAE,EAAEM,IAAI,CAAC,CAC7CH,IAAI,CACHR,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAC7B;EACL;EAEA;EAEQA,WAAWA,CAACG,KAAU;IAC5BC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,OAAOb,UAAU,CAAC,+CAA+C,CAAC;EACpE;EAAC,QAAAe,CAAA,G;qBA3BUZ,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXjB,WAAW;IAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}