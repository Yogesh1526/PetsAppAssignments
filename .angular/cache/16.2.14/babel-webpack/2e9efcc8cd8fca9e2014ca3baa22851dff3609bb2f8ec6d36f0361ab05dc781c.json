{"ast":null,"code":"import { catchError, map } from 'rxjs/operators';\nimport { BaseService } from './BaseService.services';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AppointmentService extends BaseService {\n  constructor(http) {\n    super(http);\n    this.http = http;\n  }\n  getAppointment(appointmentId) {\n    return this.get(`appointments/${appointmentId}`).pipe(map(response => response.data), catchError(this.handleError));\n  }\n  getAllAppointments() {\n    return this.get('appointments').pipe(map(response => response.data), catchError(this.handleError));\n  }\n  createAppointment(appointment) {\n    return this.post('appointments', appointment).pipe(map(response => response.data), catchError(this.handleError));\n  }\n  updateAppointment(appointment) {\n    return this.put(`appointments/${appointment.id}`, appointment).pipe(map(response => response.data), catchError(this.handleError));\n  }\n  deleteAppointment(appointmentId) {\n    return this.delete(`appointments/${appointmentId}`).pipe(map(response => response.data), catchError(this.handleError));\n  }\n  static #_ = this.ɵfac = function AppointmentService_Factory(t) {\n    return new (t || AppointmentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppointmentService,\n    factory: AppointmentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["catchError","map","BaseService","AppointmentService","constructor","http","getAppointment","appointmentId","get","pipe","response","data","handleError","getAllAppointments","createAppointment","appointment","post","updateAppointment","put","id","deleteAppointment","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\pets-appoinments-app\\src\\app\\services\\appointment.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { AppointmentRequestModel } from '../models/request.models';\r\nimport { AppointmentResponseModel, APIResponseModel } from '../models/response.models';\r\nimport { BaseService } from './BaseService.services';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppointmentService extends BaseService {\r\n\r\n  constructor(public override http: HttpClient) {\r\n    super(http);\r\n  }\r\n  \r\n  getAppointment(appointmentId: number): Observable<AppointmentResponseModel> {\r\n    return this.get<APIResponseModel<AppointmentResponseModel>>(`appointments/${appointmentId}`)\r\n      .pipe(\r\n        map(response => response.data as AppointmentResponseModel),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getAllAppointments(): Observable<AppointmentResponseModel[]> {\r\n    return this.get<APIResponseModel<AppointmentResponseModel[]>>('appointments')\r\n      .pipe(\r\n        map(response => response.data as AppointmentResponseModel[]),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  createAppointment(appointment: AppointmentRequestModel): Observable<boolean> {\r\n    return this.post<APIResponseModel<boolean>>('appointments', appointment)\r\n      .pipe(\r\n        map(response => response.data as boolean),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  updateAppointment(appointment: AppointmentRequestModel): Observable<boolean> {\r\n    return this.put<APIResponseModel<boolean>>(`appointments/${appointment.id}`, appointment)\r\n      .pipe(\r\n        map(response => response.data as boolean),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  deleteAppointment(appointmentId: number): Observable<boolean> {\r\n    return this.delete<APIResponseModel<boolean>>(`appointments/${appointmentId}`)\r\n      .pipe(\r\n        map(response => response.data as boolean),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n\r\n}\r\n"],"mappings":"AAGA,SAASA,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;AAGhD,SAASC,WAAW,QAAQ,wBAAwB;;;AAKpD,OAAM,MAAOC,kBAAmB,SAAQD,WAAW;EAEjDE,YAA4BC,IAAgB;IAC1C,KAAK,CAACA,IAAI,CAAC;IADe,KAAAA,IAAI,GAAJA,IAAI;EAEhC;EAEAC,cAAcA,CAACC,aAAqB;IAClC,OAAO,IAAI,CAACC,GAAG,CAA6C,gBAAgBD,aAAa,EAAE,CAAC,CACzFE,IAAI,CACHR,GAAG,CAACS,QAAQ,IAAIA,QAAQ,CAACC,IAAgC,CAAC,EAC1DX,UAAU,CAAC,IAAI,CAACY,WAAW,CAAC,CAC7B;EACL;EAEAC,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACL,GAAG,CAA+C,cAAc,CAAC,CAC1EC,IAAI,CACHR,GAAG,CAACS,QAAQ,IAAIA,QAAQ,CAACC,IAAkC,CAAC,EAC5DX,UAAU,CAAC,IAAI,CAACY,WAAW,CAAC,CAC7B;EACL;EAEAE,iBAAiBA,CAACC,WAAoC;IACpD,OAAO,IAAI,CAACC,IAAI,CAA4B,cAAc,EAAED,WAAW,CAAC,CACrEN,IAAI,CACHR,GAAG,CAACS,QAAQ,IAAIA,QAAQ,CAACC,IAAe,CAAC,EACzCX,UAAU,CAAC,IAAI,CAACY,WAAW,CAAC,CAC7B;EACL;EAEAK,iBAAiBA,CAACF,WAAoC;IACpD,OAAO,IAAI,CAACG,GAAG,CAA4B,gBAAgBH,WAAW,CAACI,EAAE,EAAE,EAAEJ,WAAW,CAAC,CACtFN,IAAI,CACHR,GAAG,CAACS,QAAQ,IAAIA,QAAQ,CAACC,IAAe,CAAC,EACzCX,UAAU,CAAC,IAAI,CAACY,WAAW,CAAC,CAC7B;EACL;EAEAQ,iBAAiBA,CAACb,aAAqB;IACrC,OAAO,IAAI,CAACc,MAAM,CAA4B,gBAAgBd,aAAa,EAAE,CAAC,CAC3EE,IAAI,CACHR,GAAG,CAACS,QAAQ,IAAIA,QAAQ,CAACC,IAAe,CAAC,EACzCX,UAAU,CAAC,IAAI,CAACY,WAAW,CAAC,CAC7B;EACL;EAAC,QAAAU,CAAA,G;qBA5CUnB,kBAAkB,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBxB,kBAAkB;IAAAyB,OAAA,EAAlBzB,kBAAkB,CAAA0B,IAAA;IAAAC,UAAA,EAFjB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}