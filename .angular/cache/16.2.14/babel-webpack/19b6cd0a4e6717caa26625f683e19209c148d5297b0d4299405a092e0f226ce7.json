{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction OwnerListComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"div\", 10)(5, \"a\", 11);\n    i0.ɵɵtext(6, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function OwnerListComponent_tr_16_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const breed_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.deleteBreed(breed_r2.id));\n    });\n    i0.ɵɵtext(8, \"Delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const breed_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(breed_r2.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/breeds/\", breed_r2.id, \"/edit\");\n  }\n}\nfunction OwnerListComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 13);\n    i0.ɵɵtext(2, \"No breeds found.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class OwnerListComponent {\n  constructor(router) {\n    this.router = router;\n    this.owners = []; // Assuming Owner model has properties like name, address, phoneNumber, emailAddress\n    this.filteredOwners = [];\n    this.searchTerm = '';\n  }\n  ngOnInit() {\n    // Simulated data for demonstration (replace with actual data fetching logic)\n    this.fetchOwners();\n  }\n  fetchOwners() {\n    // Simulated data fetching; replace with actual logic to fetch owner data from a service or backend\n    this.owners = [{\n      id: 1,\n      name: 'John Doe',\n      address: '123 Main St',\n      phoneNumber: '1234567890',\n      emailAddress: 'john.doe@example.com'\n    }, {\n      id: 2,\n      name: 'Jane Smith',\n      address: '456 Oak Ave',\n      phoneNumber: '9876543210',\n      emailAddress: 'jane.smith@example.com'\n    }\n    // Add more owners as needed\n    ];\n    // Initialize filteredOwners with all owners initially\n    this.filteredOwners = [...this.owners];\n  }\n  filterOwners() {\n    // Filter owners based on searchTerm\n    const search = this.searchTerm.toLowerCase();\n    this.filteredOwners = this.owners.filter(owner => owner.name.toLowerCase().includes(search) || owner.address.toLowerCase().includes(search) || owner.phoneNumber.includes(search) || owner.emailAddress.toLowerCase().includes(search));\n  }\n  clearSearch() {\n    this.searchTerm = '';\n    this.filterOwners();\n  }\n  goToNewOwner() {\n    this.router.navigate(['/owners/new']); // Assuming you have a route for creating a new owner\n  }\n\n  editOwner(id) {\n    this.router.navigate([`/owners/${id}/edit`]); // Assuming you have a route for editing an owner\n  }\n\n  deleteOwner(id) {\n    // Implement deletion logic here (e.g., call a service to delete the owner)\n    console.log(`Deleted owner with ID ${id}`);\n    // After deletion, fetch owners again or update the list as needed\n  }\n  static #_ = this.ɵfac = function OwnerListComponent_Factory(t) {\n    return new (t || OwnerListComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OwnerListComponent,\n    selectors: [[\"app-owner-list\"]],\n    decls: 18,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"row\", \"mb-3\"], [1, \"col-md-6\"], [\"type\", \"text\", \"placeholder\", \"Search breeds...\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-6\", \"text-right\"], [\"routerLink\", \"/breeds/new\", 1, \"btn\", \"btn-primary\"], [1, \"table-responsive\"], [1, \"table\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"role\", \"group\", 1, \"btn-group\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"routerLink\"], [1, \"btn\", \"btn-sm\", \"btn-danger\", \"ml-2\", 3, \"click\"], [\"colspan\", \"2\", 1, \"text-center\"]],\n    template: function OwnerListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function OwnerListComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.searchTerm = $event;\n        })(\"ngModelChange\", function OwnerListComponent_Template_input_ngModelChange_3_listener() {\n          return ctx.filterBreeds();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"a\", 5);\n        i0.ɵɵtext(6, \"New Breed\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"table\", 7)(9, \"thead\")(10, \"tr\")(11, \"th\");\n        i0.ɵɵtext(12, \"Breed Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵtext(14, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"tbody\");\n        i0.ɵɵtemplate(16, OwnerListComponent_tr_16_Template, 9, 2, \"tr\", 8);\n        i0.ɵɵtemplate(17, OwnerListComponent_tr_17_Template, 3, 0, \"tr\", 9);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.searchTerm);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filteredBreeds);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.filteredBreeds.length === 0);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i1.RouterLink],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","OwnerListComponent_tr_16_Template_button_click_7_listener","restoredCtx","ɵɵrestoreView","_r4","breed_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","deleteBreed","id","ɵɵadvance","ɵɵtextInterpolate","name","ɵɵpropertyInterpolate1","OwnerListComponent","constructor","router","owners","filteredOwners","searchTerm","ngOnInit","fetchOwners","address","phoneNumber","emailAddress","filterOwners","search","toLowerCase","filter","owner","includes","clearSearch","goToNewOwner","navigate","editOwner","deleteOwner","console","log","_","ɵɵdirectiveInject","i1","Router","_2","selectors","decls","vars","consts","template","OwnerListComponent_Template","rf","ctx","OwnerListComponent_Template_input_ngModelChange_3_listener","$event","filterBreeds","ɵɵtemplate","OwnerListComponent_tr_16_Template","OwnerListComponent_tr_17_Template","ɵɵproperty","filteredBreeds","length"],"sources":["E:\\pets-appoinments-app\\src\\app\\owner-list\\owner-list.component.ts","E:\\pets-appoinments-app\\src\\app\\owner-list\\owner-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-owner-list',\n  templateUrl: './owner-list.component.html',\n  styleUrls: ['./owner-list.component.css']\n})\nexport class OwnerListComponent implements OnInit {\n  owners: any[] = []; // Assuming Owner model has properties like name, address, phoneNumber, emailAddress\n  filteredOwners: any[] = [];\n  searchTerm: string = '';\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {\n    // Simulated data for demonstration (replace with actual data fetching logic)\n    this.fetchOwners();\n  }\n\n  fetchOwners(): void {\n    // Simulated data fetching; replace with actual logic to fetch owner data from a service or backend\n    this.owners = [\n      { id: 1, name: 'John Doe', address: '123 Main St', phoneNumber: '1234567890', emailAddress: 'john.doe@example.com' },\n      { id: 2, name: 'Jane Smith', address: '456 Oak Ave', phoneNumber: '9876543210', emailAddress: 'jane.smith@example.com' }\n      // Add more owners as needed\n    ];\n\n    // Initialize filteredOwners with all owners initially\n    this.filteredOwners = [...this.owners];\n  }\n\n  filterOwners(): void {\n    // Filter owners based on searchTerm\n    const search = this.searchTerm.toLowerCase();\n    this.filteredOwners = this.owners.filter(owner =>\n      owner.name.toLowerCase().includes(search) ||\n      owner.address.toLowerCase().includes(search) ||\n      owner.phoneNumber.includes(search) ||\n      owner.emailAddress.toLowerCase().includes(search)\n    );\n  }\n\n  clearSearch(): void {\n    this.searchTerm = '';\n    this.filterOwners();\n  }\n\n  goToNewOwner(): void {\n    this.router.navigate(['/owners/new']); // Assuming you have a route for creating a new owner\n  }\n\n  editOwner(id: number): void {\n    this.router.navigate([`/owners/${id}/edit`]); // Assuming you have a route for editing an owner\n  }\n\n  deleteOwner(id: number): void {\n    // Implement deletion logic here (e.g., call a service to delete the owner)\n    console.log(`Deleted owner with ID ${id}`);\n    // After deletion, fetch owners again or update the list as needed\n  }\n}","<div class=\"container\">\n    <div class=\"row mb-3\">\n      <div class=\"col-md-6\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search breeds...\" [(ngModel)]=\"searchTerm\" (ngModelChange)=\"filterBreeds()\">\n      </div>\n      <div class=\"col-md-6 text-right\">\n        <a routerLink=\"/breeds/new\" class=\"btn btn-primary\">New Breed</a>\n      </div>\n    </div>\n  \n    <!-- Breeds Table -->\n    <div class=\"table-responsive\">\n      <table class=\"table table-bordered\">\n        <thead>\n          <tr>\n            <th>Breed Name</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let breed of filteredBreeds\">\n            <td>{{ breed.name }}</td>\n            <td>\n              <div class=\"btn-group\" role=\"group\">\n                <a routerLink=\"/breeds/{{ breed.id }}/edit\" class=\"btn btn-sm btn-primary\">Edit</a>\n                <button class=\"btn btn-sm btn-danger ml-2\" (click)=\"deleteBreed(breed.id)\">Delete</button>\n              </div>\n            </td>\n          </tr>\n          <tr *ngIf=\"filteredBreeds.length === 0\">\n            <td colspan=\"2\" class=\"text-center\">No breeds found.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}