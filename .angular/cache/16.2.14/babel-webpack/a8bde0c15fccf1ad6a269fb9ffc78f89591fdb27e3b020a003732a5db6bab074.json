{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environments';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AppointmentService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl; // Ensure apiUrl is correctly concatenated\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer your_token_here',\n      'ngrok-skip-browser-warning': 'true' // Add ngrok-skip-browser-warning header\n    });\n  }\n\n  getAllAppointments() {\n    return this.http.get(this.apiUrl + 'api/appointments', {\n      headers: this.headers\n    });\n  }\n  getAppointmentById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`, {\n      headers: this.headers\n    });\n  }\n  createAppointment(appointment) {\n    return this.http.post(this.apiUrl, appointment, {\n      headers: this.headers\n    });\n  }\n  updateAppointment(appointment) {\n    return this.http.put(`${this.apiUrl}/${appointment.id}`, appointment, {\n      headers: this.headers\n    });\n  }\n  deleteAppointment(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`, {\n      headers: this.headers\n    });\n  }\n  static #_ = this.ɵfac = function AppointmentService_Factory(t) {\n    return new (t || AppointmentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppointmentService,\n    factory: AppointmentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","environment","AppointmentService","constructor","http","apiUrl","headers","getAllAppointments","get","getAppointmentById","id","createAppointment","appointment","post","updateAppointment","put","deleteAppointment","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\pets-appoinments-app\\src\\app\\services\\Address.services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environments';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppointmentService {\r\n  private apiUrl = environment.apiUrl; // Ensure apiUrl is correctly concatenated\r\n\r\n  private headers = new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Authorization': 'Bearer your_token_here', // Replace with your actual token\r\n    'ngrok-skip-browser-warning': 'true' // Add ngrok-skip-browser-warning header\r\n  });\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllAppointments(): Observable<any[]> {\r\n    return this.http.get<any[]>(this.apiUrl + 'api/appointments', { headers: this.headers });\r\n  }\r\n\r\n  getAppointmentById(id: number): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/${id}`, { headers: this.headers });\r\n  }\r\n\r\n  createAppointment(appointment: any): Observable<any> {\r\n    return this.http.post<any>(this.apiUrl, appointment, { headers: this.headers });\r\n  }\r\n\r\n  updateAppointment(appointment: any): Observable<any> {\r\n    return this.http.put<any>(`${this.apiUrl}/${appointment.id}`, appointment, { headers: this.headers });\r\n  }\r\n\r\n  deleteAppointment(id: number): Observable<any> {\r\n    return this.http.delete<any>(`${this.apiUrl}/${id}`, { headers: this.headers });\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,WAAW,QAAQ,+BAA+B;;;AAK3D,OAAM,MAAOC,kBAAkB;EAS7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IARhB,KAAAC,MAAM,GAAGJ,WAAW,CAACI,MAAM,CAAC,CAAC;IAE7B,KAAAC,OAAO,GAAG,IAAIN,WAAW,CAAC;MAChC,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,wBAAwB;MACzC,4BAA4B,EAAE,MAAM,CAAC;KACtC,CAAC;EAEsC;;EAExCO,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAQ,IAAI,CAACH,MAAM,GAAG,kBAAkB,EAAE;MAAEC,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;EAC1F;EAEAG,kBAAkBA,CAACC,EAAU;IAC3B,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAM,GAAG,IAAI,CAACH,MAAM,IAAIK,EAAE,EAAE,EAAE;MAAEJ,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;EAC9E;EAEAK,iBAAiBA,CAACC,WAAgB;IAChC,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAM,IAAI,CAACR,MAAM,EAAEO,WAAW,EAAE;MAAEN,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;EACjF;EAEAQ,iBAAiBA,CAACF,WAAgB;IAChC,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAM,GAAG,IAAI,CAACV,MAAM,IAAIO,WAAW,CAACF,EAAE,EAAE,EAAEE,WAAW,EAAE;MAAEN,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;EACvG;EAEAU,iBAAiBA,CAACN,EAAU;IAC1B,OAAO,IAAI,CAACN,IAAI,CAACa,MAAM,CAAM,GAAG,IAAI,CAACZ,MAAM,IAAIK,EAAE,EAAE,EAAE;MAAEJ,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;EACjF;EAAC,QAAAY,CAAA,G;qBA7BUhB,kBAAkB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBrB,kBAAkB;IAAAsB,OAAA,EAAlBtB,kBAAkB,CAAAuB,IAAA;IAAAC,UAAA,EAFjB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}