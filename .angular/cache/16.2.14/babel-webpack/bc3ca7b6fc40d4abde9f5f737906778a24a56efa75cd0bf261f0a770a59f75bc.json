{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nexport class EditAppointmentComponent {\n  constructor(formBuilder, route, router) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.createForm();\n  }\n  createForm() {\n    this.editForm = this.formBuilder.group({\n      id: [this.route.snapshot.params['id'], Validators.required],\n      petName: ['', Validators.required],\n      ownerName: ['', Validators.required],\n      date: ['', Validators.required],\n      reason: ['', Validators.required]\n    });\n    // You could fetch existing appointment data and patch the form values here\n    // Example: Fetch appointment details based on this.editForm.get('id').value\n  }\n\n  onSubmit() {\n    if (this.editForm.valid) {\n      // Submit logic here (e.g., update appointment in backend)\n      console.log('Form submitted:', this.editForm.value);\n      // Navigate back to appointments list after submission\n      this.router.navigate(['/appointments']);\n    }\n  }\n  static #_ = this.ɵfac = function EditAppointmentComponent_Factory(t) {\n    return new (t || EditAppointmentComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditAppointmentComponent,\n    selectors: [[\"app-edit-appointment\"]],\n    decls: 24,\n    vars: 2,\n    consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"petName\"], [\"type\", \"text\", \"id\", \"petName\", \"formControlName\", \"petName\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"ownerName\"], [\"type\", \"text\", \"id\", \"ownerName\", \"formControlName\", \"ownerName\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"date\"], [\"type\", \"date\", \"id\", \"date\", \"formControlName\", \"date\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"reason\"], [\"id\", \"reason\", \"formControlName\", \"reason\", \"rows\", \"3\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mr-2\", 3, \"disabled\"], [\"routerLink\", \"/appointments\", 1, \"btn\", \"btn-outline-secondary\"]],\n    template: function EditAppointmentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Edit Appointment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function EditAppointmentComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Pet's Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"Owner's Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 9);\n        i0.ɵɵtext(18, \"Reason\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"textarea\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 11);\n        i0.ɵɵtext(21, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"a\", 12);\n        i0.ɵɵtext(23, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.editForm);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"disabled\", ctx.editForm.invalid);\n      }\n    },\n    styles: [\"\\n\\n\\n.container[_ngcontent-%COMP%] {\\n    max-width: 600px;\\n    margin: auto;\\n    padding: 20px;\\n    background-color: #ffffff;\\n    border: 1px solid #ced4da;\\n    border-radius: 8px;\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n    margin-top: 20px;\\n  }\\n  \\n  h2[_ngcontent-%COMP%] {\\n    margin-bottom: 20px;\\n    font-size: 24px;\\n  }\\n  \\n  .form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 20px;\\n  }\\n  \\n  label[_ngcontent-%COMP%] {\\n    font-weight: bold;\\n  }\\n  \\n  textarea[_ngcontent-%COMP%] {\\n    resize: vertical;\\n  }\\n  \\n  .btn-primary[_ngcontent-%COMP%] {\\n    margin-right: 10px;\\n  }\\n  \\n  .btn-outline-secondary[_ngcontent-%COMP%] {\\n    color: #007bff;\\n    border-color: #007bff;\\n  }\\n  \\n  .btn-outline-secondary[_ngcontent-%COMP%]:hover {\\n    background-color: #007bff;\\n    color: #ffffff;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZWRpdC1hcHBvaW50bWVudC9lZGl0LWFwcG9pbnRtZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsbUNBQW1DOztBQUVuQztJQUNJLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osYUFBYTtJQUNiLHlCQUF5QjtJQUN6Qix5QkFBeUI7SUFDekIsa0JBQWtCO0lBQ2xCLHVDQUF1QztJQUN2QyxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxtQkFBbUI7SUFDbkIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxxQkFBcUI7RUFDdkI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsY0FBYztFQUNoQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIG5ldy1hcHBvaW50bWVudC5jb21wb25lbnQuc2NzcyAqL1xyXG5cclxuLmNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2VkNGRhO1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgaDIge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICB9XHJcbiAgXHJcbiAgLmZvcm0tZ3JvdXAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgbGFiZWwge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgfVxyXG4gIFxyXG4gIHRleHRhcmVhIHtcclxuICAgIHJlc2l6ZTogdmVydGljYWw7XHJcbiAgfVxyXG4gIFxyXG4gIC5idG4tcHJpbWFyeSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5idG4tb3V0bGluZS1zZWNvbmRhcnkge1xyXG4gICAgY29sb3I6ICMwMDdiZmY7XHJcbiAgICBib3JkZXItY29sb3I6ICMwMDdiZmY7XHJcbiAgfVxyXG4gIFxyXG4gIC5idG4tb3V0bGluZS1zZWNvbmRhcnk6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICAgIGNvbG9yOiAjZmZmZmZmO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","EditAppointmentComponent","constructor","formBuilder","route","router","ngOnInit","createForm","editForm","group","id","snapshot","params","required","petName","ownerName","date","reason","onSubmit","valid","console","log","value","navigate","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","ActivatedRoute","Router","_2","selectors","decls","vars","consts","template","EditAppointmentComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EditAppointmentComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","invalid"],"sources":["E:\\pets-appoinments-app\\src\\app\\edit-appointment\\edit-appointment.component.ts","E:\\pets-appoinments-app\\src\\app\\edit-appointment\\edit-appointment.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-appointment',\n  templateUrl: './edit-appointment.component.html',\n  styleUrls: ['./edit-appointment.component.css']\n})\nexport class EditAppointmentComponent implements OnInit {\n\n  editForm!: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm(): void {\n    this.editForm = this.formBuilder.group({\n      id: [this.route.snapshot.params['id'], Validators.required], // Assuming you pass the ID via route params\n      petName: ['', Validators.required],\n      ownerName: ['', Validators.required],\n      date: ['', Validators.required],\n      reason: ['', Validators.required]\n    });\n\n    // You could fetch existing appointment data and patch the form values here\n    // Example: Fetch appointment details based on this.editForm.get('id').value\n  }\n\n  onSubmit(): void {\n    if (this.editForm.valid) {\n      // Submit logic here (e.g., update appointment in backend)\n      console.log('Form submitted:', this.editForm.value);\n      // Navigate back to appointments list after submission\n      this.router.navigate(['/appointments']);\n    }\n  }\n}","<div class=\"container\">\n    <h2>Edit Appointment</h2>\n    <form [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"petName\">Pet's Name</label>\n        <input type=\"text\" id=\"petName\" class=\"form-control\" formControlName=\"petName\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"ownerName\">Owner's Name</label>\n        <input type=\"text\" id=\"ownerName\" class=\"form-control\" formControlName=\"ownerName\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"date\">Date</label>\n        <input type=\"date\" id=\"date\" class=\"form-control\" formControlName=\"date\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"reason\">Reason</label>\n        <textarea id=\"reason\" class=\"form-control\" formControlName=\"reason\" rows=\"3\" required></textarea>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary mr-2\" [disabled]=\"editForm.invalid\">Save</button>\n      <a routerLink=\"/appointments\" class=\"btn btn-outline-secondary\">Cancel</a>\n    </form>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}