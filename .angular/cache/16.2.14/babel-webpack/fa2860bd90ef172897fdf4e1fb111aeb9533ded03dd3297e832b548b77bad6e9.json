{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nexport class EditPetComponent {\n  constructor(formBuilder, route, router) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.petId = -1;\n    this.owners = []; // This should be populated with the list of owners\n    this.editForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      petType: ['', Validators.required],\n      petBreed: ['', Validators.required],\n      ownerId: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.loadPetDetails();\n    this.loadOwners();\n  }\n  loadPetDetails() {}\n  loadOwners() {}\n  onSubmit() {\n    if (this.editForm.valid) {} else {}\n  }\n  get form() {\n    return this.editForm.controls;\n  }\n  static #_ = this.ɵfac = function EditPetComponent_Factory(t) {\n    return new (t || EditPetComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditPetComponent,\n    selectors: [[\"app-edit-pet\"]],\n    decls: 2,\n    vars: 0,\n    template: function EditPetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"edit-pet works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","EditPetComponent","constructor","formBuilder","route","router","petId","owners","editForm","group","name","required","petType","petBreed","ownerId","ngOnInit","loadPetDetails","loadOwners","onSubmit","valid","form","controls","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","ActivatedRoute","Router","_2","selectors","decls","vars","template","EditPetComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["E:\\pets-appoinments-app\\src\\app\\edit-pet\\edit-pet.component.ts","E:\\pets-appoinments-app\\src\\app\\edit-pet\\edit-pet.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-pet',\n  templateUrl: './edit-pet.component.html',\n  styleUrls: ['./edit-pet.component.css']\n})\nexport class EditPetComponent implements OnInit {\n  editForm: FormGroup;\n  petId: number=-1;\n  owners: any[] = []; // This should be populated with the list of owners\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) {\n    this.editForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      petType: ['', Validators.required],\n      petBreed: ['', Validators.required],\n      ownerId: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadPetDetails();\n    this.loadOwners();\n  }\n\n  loadPetDetails(): void {\n    \n      \n  }\n\n  loadOwners(): void {\n    \n  }\n\n  onSubmit(): void {\n    if (this.editForm.valid) {\n      \n    } else {\n      \n  }\n}\n\n  get form() { return this.editForm.controls; }\n}\n","<p>edit-pet works!</p>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAQnE,OAAM,MAAOC,gBAAgB;EAK3BC,YACUC,WAAwB,EACxBC,KAAqB,EACrBC,MAAc;IAFd,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IANhB,KAAAC,KAAK,GAAS,CAAC,CAAC;IAChB,KAAAC,MAAM,GAAU,EAAE,CAAC,CAAC;IAOlB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACrCC,IAAI,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ,CAAC;MAC/BC,OAAO,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ,CAAC;MAClCE,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACW,QAAQ,CAAC;MACnCG,OAAO,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACW,QAAQ;KAClC,CAAC;EACJ;EAEAI,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAD,cAAcA,CAAA,GAGd;EAEAC,UAAUA,CAAA,GAEV;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACV,QAAQ,CAACW,KAAK,EAAE,C,CAExB,MAAM,C;EAGX;EAEE,IAAIC,IAAIA,CAAA;IAAK,OAAO,IAAI,CAACZ,QAAQ,CAACa,QAAQ;EAAE;EAAC,QAAAC,CAAA,G;qBAxClCrB,gBAAgB,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAE,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAhB7B,gBAAgB;IAAA8B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT7Bb,EAAA,CAAAe,cAAA,QAAG;QAAAf,EAAA,CAAAgB,MAAA,sBAAe;QAAAhB,EAAA,CAAAiB,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}