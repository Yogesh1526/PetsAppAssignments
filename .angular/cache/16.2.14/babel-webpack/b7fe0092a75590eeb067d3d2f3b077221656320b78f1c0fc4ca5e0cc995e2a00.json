{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction PetListComponent_tr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"div\", 10)(11, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function PetListComponent_tr_26_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const pet_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.editPet(pet_r2.id));\n    });\n    i0.ɵɵtext(12, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function PetListComponent_tr_26_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const pet_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deletePet(pet_r2.id));\n    });\n    i0.ɵɵtext(14, \"Delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const pet_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(pet_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(pet_r2.petType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(pet_r2.petBreed);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(pet_r2.ownerName);\n  }\n}\nfunction PetListComponent_tr_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 13);\n    i0.ɵɵtext(2, \"No pets found.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class PetListComponent {\n  constructor(router) {\n    this.router = router;\n    this.pets = []; // Assuming Pet model has properties like name, petType, petBreed, ownerName\n    this.filteredPets = [];\n    this.searchTerm = '';\n  }\n  ngOnInit() {\n    // Simulated data for demonstration (replace with actual data fetching logic)\n    this.fetchPets();\n  }\n  fetchPets() {\n    // Simulated data fetching; replace with actual logic to fetch pet data from a service or backend\n    this.pets = [{\n      id: 1,\n      name: 'Buddy',\n      petType: 'Dog',\n      petBreed: 'Labrador',\n      ownerName: 'John Doe'\n    }, {\n      id: 2,\n      name: 'Whiskers',\n      petType: 'Cat',\n      petBreed: 'Siamese',\n      ownerName: 'Jane Smith'\n    }\n    // Add more pets as needed\n    ];\n    // Initialize filteredPets with all pets initially\n    this.filteredPets = [...this.pets];\n  }\n  filterPets() {\n    // Filter pets based on searchTerm\n    const search = this.searchTerm.toLowerCase();\n    this.filteredPets = this.pets.filter(pet => pet.name.toLowerCase().includes(search) || pet.petType.toLowerCase().includes(search) || pet.petBreed.toLowerCase().includes(search) || pet.ownerName.toLowerCase().includes(search));\n  }\n  clearSearch() {\n    this.searchTerm = '';\n    this.filterPets();\n  }\n  goToNewPet() {\n    this.router.navigate(['/pets/new']); // Assuming you have a route for creating a new pet\n  }\n\n  editPet(id) {\n    this.router.navigate([`/pets/${id}/edit`]); // Assuming you have a route for editing a pet\n  }\n\n  deletePet(id) {\n    // Implement deletion logic here (e.g., call a service to delete the pet)\n    console.log(`Deleted pet with ID ${id}`);\n    // After deletion, fetch pets again or update the list as needed\n  }\n  static #_ = this.ɵfac = function PetListComponent_Factory(t) {\n    return new (t || PetListComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PetListComponent,\n    selectors: [[\"app-pet-list\"]],\n    decls: 28,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"row\", \"mb-3\"], [1, \"col-md-6\"], [\"type\", \"text\", \"placeholder\", \"Search pets...\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-6\", \"text-right\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"table-responsive\"], [1, \"table\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"role\", \"group\", \"aria-label\", \"Pet Actions\", 1, \"btn-group\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-danger\", \"ml-2\", 3, \"click\"], [\"colspan\", \"5\", 1, \"text-center\"]],\n    template: function PetListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n        i0.ɵɵtext(4, \"Pets List\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"div\", 2)(7, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function PetListComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.searchTerm = $event;\n        })(\"ngModelChange\", function PetListComponent_Template_input_ngModelChange_7_listener() {\n          return ctx.filterPets();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 4)(9, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function PetListComponent_Template_button_click_9_listener() {\n          return ctx.goToNewPet();\n        });\n        i0.ɵɵtext(10, \"New Pet\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"table\", 7)(13, \"thead\")(14, \"tr\")(15, \"th\");\n        i0.ɵɵtext(16, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\");\n        i0.ɵɵtext(18, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"th\");\n        i0.ɵɵtext(20, \"Breed\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"th\");\n        i0.ɵɵtext(22, \"Owner\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"th\");\n        i0.ɵɵtext(24, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"tbody\");\n        i0.ɵɵtemplate(26, PetListComponent_tr_26_Template, 15, 4, \"tr\", 8);\n        i0.ɵɵtemplate(27, PetListComponent_tr_27_Template, 3, 0, \"tr\", 9);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.searchTerm);\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filteredPets);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.filteredPets.length === 0);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PetListComponent_tr_26_Template_button_click_11_listener","restoredCtx","ɵɵrestoreView","_r4","pet_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","editPet","id","PetListComponent_tr_26_Template_button_click_13_listener","ctx_r5","deletePet","ɵɵadvance","ɵɵtextInterpolate","name","petType","petBreed","ownerName","PetListComponent","constructor","router","pets","filteredPets","searchTerm","ngOnInit","fetchPets","filterPets","search","toLowerCase","filter","pet","includes","clearSearch","goToNewPet","navigate","console","log","_","ɵɵdirectiveInject","i1","Router","_2","selectors","decls","vars","consts","template","PetListComponent_Template","rf","ctx","PetListComponent_Template_input_ngModelChange_7_listener","$event","PetListComponent_Template_button_click_9_listener","ɵɵtemplate","PetListComponent_tr_26_Template","PetListComponent_tr_27_Template","ɵɵproperty","length"],"sources":["E:\\pets-appoinments-app\\src\\app\\pet-list\\pet-list.component.ts","E:\\pets-appoinments-app\\src\\app\\pet-list\\pet-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-pet-list',\n  templateUrl: './pet-list.component.html',\n  styleUrls: ['./pet-list.component.css']\n})\nexport class PetListComponent implements OnInit {\n  pets: any[] = []; // Assuming Pet model has properties like name, petType, petBreed, ownerName\n  filteredPets: any[] = [];\n  searchTerm: string = '';\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {\n    // Simulated data for demonstration (replace with actual data fetching logic)\n    this.fetchPets();\n  }\n\n  fetchPets(): void {\n    // Simulated data fetching; replace with actual logic to fetch pet data from a service or backend\n    this.pets = [\n      { id: 1, name: 'Buddy', petType: 'Dog', petBreed: 'Labrador', ownerName: 'John Doe' },\n      { id: 2, name: 'Whiskers', petType: 'Cat', petBreed: 'Siamese', ownerName: 'Jane Smith' }\n      // Add more pets as needed\n    ];\n\n    // Initialize filteredPets with all pets initially\n    this.filteredPets = [...this.pets];\n  }\n\n  filterPets(): void {\n    // Filter pets based on searchTerm\n    const search = this.searchTerm.toLowerCase();\n    this.filteredPets = this.pets.filter(pet =>\n      pet.name.toLowerCase().includes(search) ||\n      pet.petType.toLowerCase().includes(search) ||\n      pet.petBreed.toLowerCase().includes(search) ||\n      pet.ownerName.toLowerCase().includes(search)\n    );\n  }\n\n  clearSearch(): void {\n    this.searchTerm = '';\n    this.filterPets();\n  }\n\n  goToNewPet(): void {\n    this.router.navigate(['/pets/new']); // Assuming you have a route for creating a new pet\n  }\n\n  editPet(id: number): void {\n    this.router.navigate([`/pets/${id}/edit`]); // Assuming you have a route for editing a pet\n  }\n\n  deletePet(id: number): void {\n    // Implement deletion logic here (e.g., call a service to delete the pet)\n    console.log(`Deleted pet with ID ${id}`);\n    // After deletion, fetch pets again or update the list as needed\n  }\n}","<div class=\"container\">\n    <div class=\"row mb-3\">\n      <div class=\"col-md-6\">\n        <h2>Pets List</h2>\n      </div>\n    </div>\n  \n    <!-- Filter Section -->\n    <div class=\"row mb-3\">\n      <div class=\"col-md-6\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search pets...\" [(ngModel)]=\"searchTerm\" (ngModelChange)=\"filterPets()\">\n      </div>\n      <div class=\"col-md-6 text-right\">\n        <!-- Ensure the button is inside a column that is right-aligned -->\n        <button class=\"btn btn-primary\" (click)=\"goToNewPet()\">New Pet</button>\n      </div>\n    </div>\n  \n    <!-- Pets Table -->\n    <div class=\"table-responsive\">\n      <table class=\"table table-bordered\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Breed</th>\n            <th>Owner</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let pet of filteredPets\">\n            <td>{{ pet.name }}</td>\n            <td>{{ pet.petType }}</td>\n            <td>{{ pet.petBreed }}</td>\n            <td>{{ pet.ownerName }}</td>\n            <td>\n              <div class=\"btn-group\" role=\"group\" aria-label=\"Pet Actions\">\n                <button class=\"btn btn-sm btn-primary\" (click)=\"editPet(pet.id)\">Edit</button>\n                <button class=\"btn btn-sm btn-danger ml-2\" (click)=\"deletePet(pet.id)\">Delete</button>\n              </div>\n            </td>\n          </tr>\n          <tr *ngIf=\"filteredPets.length === 0\">\n            <td colspan=\"5\" class=\"text-center\">No pets found.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}