{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction OwnerListComponent_tr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"div\", 10)(11, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function OwnerListComponent_tr_26_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const owner_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.editOwner(owner_r2.id));\n    });\n    i0.ɵɵtext(12, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function OwnerListComponent_tr_26_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const owner_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteOwner(owner_r2.id));\n    });\n    i0.ɵɵtext(14, \"Delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const owner_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(owner_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(owner_r2.address);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(owner_r2.phoneNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(owner_r2.emailAddress);\n  }\n}\nfunction OwnerListComponent_tr_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 13);\n    i0.ɵɵtext(2, \"No owners found.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class OwnerListComponent {\n  constructor(router) {\n    this.router = router;\n    this.owners = []; // Assuming Owner model has properties like name, address, phoneNumber, emailAddress\n    this.filteredOwners = [];\n    this.searchTerm = '';\n  }\n  ngOnInit() {\n    // Simulated data for demonstration (replace with actual data fetching logic)\n    this.fetchOwners();\n  }\n  fetchOwners() {\n    // Simulated data fetching; replace with actual logic to fetch owner data from a service or backend\n    this.owners = [{\n      id: 1,\n      name: 'John Doe',\n      address: '123 Main St',\n      phoneNumber: '1234567890',\n      emailAddress: 'john.doe@example.com'\n    }, {\n      id: 2,\n      name: 'Jane Smith',\n      address: '456 Oak Ave',\n      phoneNumber: '9876543210',\n      emailAddress: 'jane.smith@example.com'\n    }\n    // Add more owners as needed\n    ];\n    // Initialize filteredOwners with all owners initially\n    this.filteredOwners = [...this.owners];\n  }\n  filterOwners() {\n    // Filter owners based on searchTerm\n    const search = this.searchTerm.toLowerCase();\n    this.filteredOwners = this.owners.filter(owner => owner.name.toLowerCase().includes(search) || owner.address.toLowerCase().includes(search) || owner.phoneNumber.includes(search) || owner.emailAddress.toLowerCase().includes(search));\n  }\n  clearSearch() {\n    this.searchTerm = '';\n    this.filterOwners();\n  }\n  goToNewOwner() {\n    this.router.navigate(['/owners/new']); // Assuming you have a route for creating a new owner\n  }\n\n  editOwner(id) {\n    this.router.navigate([`/owners/${id}/edit`]); // Assuming you have a route for editing an owner\n  }\n\n  deleteOwner(id) {\n    // Implement deletion logic here (e.g., call a service to delete the owner)\n    console.log(`Deleted owner with ID ${id}`);\n    // After deletion, fetch owners again or update the list as needed\n  }\n  static #_ = this.ɵfac = function OwnerListComponent_Factory(t) {\n    return new (t || OwnerListComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OwnerListComponent,\n    selectors: [[\"app-owner-list\"]],\n    decls: 28,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"row\", \"mb-3\"], [1, \"col-md-6\"], [\"type\", \"text\", \"placeholder\", \"Search owners...\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-6\", \"text-right\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"table-responsive\"], [1, \"table\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"role\", \"group\", \"aria-label\", \"Owner Actions\", 1, \"btn-group\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-danger\", \"ml-2\", 3, \"click\"], [\"colspan\", \"5\", 1, \"text-center\"]],\n    template: function OwnerListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n        i0.ɵɵtext(4, \"Owners List\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"div\", 2)(7, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function OwnerListComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.searchTerm = $event;\n        })(\"ngModelChange\", function OwnerListComponent_Template_input_ngModelChange_7_listener() {\n          return ctx.filterOwners();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 4)(9, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function OwnerListComponent_Template_button_click_9_listener() {\n          return ctx.goToNewOwner();\n        });\n        i0.ɵɵtext(10, \"New Owner\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"table\", 7)(13, \"thead\")(14, \"tr\")(15, \"th\");\n        i0.ɵɵtext(16, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\");\n        i0.ɵɵtext(18, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"th\");\n        i0.ɵɵtext(20, \"Phone Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"th\");\n        i0.ɵɵtext(22, \"Email Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"th\");\n        i0.ɵɵtext(24, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"tbody\");\n        i0.ɵɵtemplate(26, OwnerListComponent_tr_26_Template, 15, 4, \"tr\", 8);\n        i0.ɵɵtemplate(27, OwnerListComponent_tr_27_Template, 3, 0, \"tr\", 9);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.searchTerm);\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filteredOwners);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.filteredOwners.length === 0);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","OwnerListComponent_tr_26_Template_button_click_11_listener","restoredCtx","ɵɵrestoreView","_r4","owner_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","editOwner","id","OwnerListComponent_tr_26_Template_button_click_13_listener","ctx_r5","deleteOwner","ɵɵadvance","ɵɵtextInterpolate","name","address","phoneNumber","emailAddress","OwnerListComponent","constructor","router","owners","filteredOwners","searchTerm","ngOnInit","fetchOwners","filterOwners","search","toLowerCase","filter","owner","includes","clearSearch","goToNewOwner","navigate","console","log","_","ɵɵdirectiveInject","i1","Router","_2","selectors","decls","vars","consts","template","OwnerListComponent_Template","rf","ctx","OwnerListComponent_Template_input_ngModelChange_7_listener","$event","OwnerListComponent_Template_button_click_9_listener","ɵɵtemplate","OwnerListComponent_tr_26_Template","OwnerListComponent_tr_27_Template","ɵɵproperty","length"],"sources":["E:\\pets-appoinments-app\\src\\app\\owner-list\\owner-list.component.ts","E:\\pets-appoinments-app\\src\\app\\owner-list\\owner-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-owner-list',\n  templateUrl: './owner-list.component.html',\n  styleUrls: ['./owner-list.component.css']\n})\nexport class OwnerListComponent implements OnInit {\n  owners: any[] = []; // Assuming Owner model has properties like name, address, phoneNumber, emailAddress\n  filteredOwners: any[] = [];\n  searchTerm: string = '';\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {\n    // Simulated data for demonstration (replace with actual data fetching logic)\n    this.fetchOwners();\n  }\n\n  fetchOwners(): void {\n    // Simulated data fetching; replace with actual logic to fetch owner data from a service or backend\n    this.owners = [\n      { id: 1, name: 'John Doe', address: '123 Main St', phoneNumber: '1234567890', emailAddress: 'john.doe@example.com' },\n      { id: 2, name: 'Jane Smith', address: '456 Oak Ave', phoneNumber: '9876543210', emailAddress: 'jane.smith@example.com' }\n      // Add more owners as needed\n    ];\n\n    // Initialize filteredOwners with all owners initially\n    this.filteredOwners = [...this.owners];\n  }\n\n  filterOwners(): void {\n    // Filter owners based on searchTerm\n    const search = this.searchTerm.toLowerCase();\n    this.filteredOwners = this.owners.filter(owner =>\n      owner.name.toLowerCase().includes(search) ||\n      owner.address.toLowerCase().includes(search) ||\n      owner.phoneNumber.includes(search) ||\n      owner.emailAddress.toLowerCase().includes(search)\n    );\n  }\n\n  clearSearch(): void {\n    this.searchTerm = '';\n    this.filterOwners();\n  }\n\n  goToNewOwner(): void {\n    this.router.navigate(['/owners/new']); // Assuming you have a route for creating a new owner\n  }\n\n  editOwner(id: number): void {\n    this.router.navigate([`/owners/${id}/edit`]); // Assuming you have a route for editing an owner\n  }\n\n  deleteOwner(id: number): void {\n    // Implement deletion logic here (e.g., call a service to delete the owner)\n    console.log(`Deleted owner with ID ${id}`);\n    // After deletion, fetch owners again or update the list as needed\n  }\n}","<div class=\"container\">\n    <div class=\"row mb-3\">\n      <div class=\"col-md-6\">\n        <h2>Owners List</h2>\n      </div>\n    </div>\n  \n    <!-- Filter Section -->\n    <div class=\"row mb-3\">\n      <div class=\"col-md-6\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search owners...\" [(ngModel)]=\"searchTerm\" (ngModelChange)=\"filterOwners()\">\n      </div>\n      <div class=\"col-md-6 text-right\">\n        <!-- Ensure the button is inside a column that is right-aligned -->\n        <button class=\"btn btn-primary\" (click)=\"goToNewOwner()\">New Owner</button>\n      </div>\n    </div>\n  \n    <!-- Owners Table -->\n    <div class=\"table-responsive\">\n      <table class=\"table table-bordered\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Address</th>\n            <th>Phone Number</th>\n            <th>Email Address</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let owner of filteredOwners\">\n            <td>{{ owner.name }}</td>\n            <td>{{ owner.address }}</td>\n            <td>{{ owner.phoneNumber }}</td>\n            <td>{{ owner.emailAddress }}</td>\n            <td>\n              <div class=\"btn-group\" role=\"group\" aria-label=\"Owner Actions\">\n                <button class=\"btn btn-sm btn-primary\" (click)=\"editOwner(owner.id)\">Edit</button>\n                <button class=\"btn btn-sm btn-danger ml-2\" (click)=\"deleteOwner(owner.id)\">Delete</button>\n              </div>\n            </td>\n          </tr>\n          <tr *ngIf=\"filteredOwners.length === 0\">\n            <td colspan=\"5\" class=\"text-center\">No owners found.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}