{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let PetListComponent = class PetListComponent {\n  constructor(router) {\n    this.router = router;\n    this.pets = []; // Assuming Pet model has properties like name, petType, petBreed, ownerName\n    this.filteredPets = [];\n    this.searchTerm = '';\n  }\n  ngOnInit() {\n    // Simulated data for demonstration (replace with actual data fetching logic)\n    this.fetchPets();\n  }\n  fetchPets() {\n    // Simulated data fetching; replace with actual logic to fetch pet data from a service or backend\n    this.pets = [{\n      id: 1,\n      name: 'Buddy',\n      petType: 'Dog',\n      petBreed: 'Labrador',\n      ownerName: 'John Doe'\n    }, {\n      id: 2,\n      name: 'Whiskers',\n      petType: 'Cat',\n      petBreed: 'Siamese',\n      ownerName: 'Jane Smith'\n    }\n    // Add more pets as needed\n    ];\n    // Initialize filteredPets with all pets initially\n    this.filteredPets = [...this.pets];\n  }\n  filterPets() {\n    // Filter pets based on searchTerm\n    const search = this.searchTerm.toLowerCase();\n    this.filteredPets = this.pets.filter(pet => pet.name.toLowerCase().includes(search) || pet.petType.toLowerCase().includes(search) || pet.petBreed.toLowerCase().includes(search) || pet.ownerName.toLowerCase().includes(search));\n  }\n  clearSearch() {\n    this.searchTerm = '';\n    this.filterPets();\n  }\n  goToNewPet() {\n    this.router.navigate(['/pets/new']); // Assuming you have a route for creating a new pet\n  }\n\n  editPet(id) {\n    this.router.navigate([`/pets/${id}/edit`]); // Assuming you have a route for editing a pet\n  }\n\n  deletePet(id) {\n    // Implement deletion logic here (e.g., call a service to delete the pet)\n    console.log(`Deleted pet with ID ${id}`);\n    // After deletion, fetch pets again or update the list as needed\n  }\n};\n\nPetListComponent = __decorate([Component({\n  selector: 'app-pet-list',\n  templateUrl: './pet-list.component.html',\n  styleUrls: ['./pet-list.component.css']\n})], PetListComponent);","map":{"version":3,"names":["Component","PetListComponent","constructor","router","pets","filteredPets","searchTerm","ngOnInit","fetchPets","id","name","petType","petBreed","ownerName","filterPets","search","toLowerCase","filter","pet","includes","clearSearch","goToNewPet","navigate","editPet","deletePet","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\pets-appoinments-app\\src\\app\\pet-list\\pet-list.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-pet-list',\n  templateUrl: './pet-list.component.html',\n  styleUrls: ['./pet-list.component.css']\n})\nexport class PetListComponent implements OnInit {\n  pets: Pet[] = []; // Assuming Pet model has properties like name, petType, petBreed, ownerName\n  filteredPets: Pet[] = [];\n  searchTerm: string = '';\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {\n    // Simulated data for demonstration (replace with actual data fetching logic)\n    this.fetchPets();\n  }\n\n  fetchPets(): void {\n    // Simulated data fetching; replace with actual logic to fetch pet data from a service or backend\n    this.pets = [\n      { id: 1, name: 'Buddy', petType: 'Dog', petBreed: 'Labrador', ownerName: 'John Doe' },\n      { id: 2, name: 'Whiskers', petType: 'Cat', petBreed: 'Siamese', ownerName: 'Jane Smith' }\n      // Add more pets as needed\n    ];\n\n    // Initialize filteredPets with all pets initially\n    this.filteredPets = [...this.pets];\n  }\n\n  filterPets(): void {\n    // Filter pets based on searchTerm\n    const search = this.searchTerm.toLowerCase();\n    this.filteredPets = this.pets.filter(pet =>\n      pet.name.toLowerCase().includes(search) ||\n      pet.petType.toLowerCase().includes(search) ||\n      pet.petBreed.toLowerCase().includes(search) ||\n      pet.ownerName.toLowerCase().includes(search)\n    );\n  }\n\n  clearSearch(): void {\n    this.searchTerm = '';\n    this.filterPets();\n  }\n\n  goToNewPet(): void {\n    this.router.navigate(['/pets/new']); // Assuming you have a route for creating a new pet\n  }\n\n  editPet(id: number): void {\n    this.router.navigate([`/pets/${id}/edit`]); // Assuming you have a route for editing a pet\n  }\n\n  deletePet(id: number): void {\n    // Implement deletion logic here (e.g., call a service to delete the pet)\n    console.log(`Deleted pet with ID ${id}`);\n    // After deletion, fetch pets again or update the list as needed\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAK3BC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAJ1B,KAAAC,IAAI,GAAU,EAAE,CAAC,CAAC;IAClB,KAAAC,YAAY,GAAU,EAAE;IACxB,KAAAC,UAAU,GAAW,EAAE;EAEc;EAErCC,QAAQA,CAAA;IACN;IACA,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP;IACA,IAAI,CAACJ,IAAI,GAAG,CACV;MAAEK,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,OAAO;MAAEC,OAAO,EAAE,KAAK;MAAEC,QAAQ,EAAE,UAAU;MAAEC,SAAS,EAAE;IAAU,CAAE,EACrF;MAAEJ,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,UAAU;MAAEC,OAAO,EAAE,KAAK;MAAEC,QAAQ,EAAE,SAAS;MAAEC,SAAS,EAAE;IAAY;IACvF;IAAA,CACD;IAED;IACA,IAAI,CAACR,YAAY,GAAG,CAAC,GAAG,IAAI,CAACD,IAAI,CAAC;EACpC;EAEAU,UAAUA,CAAA;IACR;IACA,MAAMC,MAAM,GAAG,IAAI,CAACT,UAAU,CAACU,WAAW,EAAE;IAC5C,IAAI,CAACX,YAAY,GAAG,IAAI,CAACD,IAAI,CAACa,MAAM,CAACC,GAAG,IACtCA,GAAG,CAACR,IAAI,CAACM,WAAW,EAAE,CAACG,QAAQ,CAACJ,MAAM,CAAC,IACvCG,GAAG,CAACP,OAAO,CAACK,WAAW,EAAE,CAACG,QAAQ,CAACJ,MAAM,CAAC,IAC1CG,GAAG,CAACN,QAAQ,CAACI,WAAW,EAAE,CAACG,QAAQ,CAACJ,MAAM,CAAC,IAC3CG,GAAG,CAACL,SAAS,CAACG,WAAW,EAAE,CAACG,QAAQ,CAACJ,MAAM,CAAC,CAC7C;EACH;EAEAK,WAAWA,CAAA;IACT,IAAI,CAACd,UAAU,GAAG,EAAE;IACpB,IAAI,CAACQ,UAAU,EAAE;EACnB;EAEAO,UAAUA,CAAA;IACR,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;EACvC;;EAEAC,OAAOA,CAACd,EAAU;IAChB,IAAI,CAACN,MAAM,CAACmB,QAAQ,CAAC,CAAC,SAASb,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;EAC9C;;EAEAe,SAASA,CAACf,EAAU;IAClB;IACAgB,OAAO,CAACC,GAAG,CAAC,uBAAuBjB,EAAE,EAAE,CAAC;IACxC;EACF;CACD;;AArDYR,gBAAgB,GAAA0B,UAAA,EAL5B3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACW7B,gBAAgB,CAqD5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}