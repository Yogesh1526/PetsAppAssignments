{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction AddOwnerComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddOwnerComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtemplate(1, AddOwnerComponent_div_8_div_1_Template, 2, 0, \"div\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.contactForm.get(\"name\")) == null ? null : tmp_0_0.hasError(\"required\"));\n  }\n}\nfunction AddOwnerComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Address Line 1 is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddOwnerComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtemplate(1, AddOwnerComponent_div_14_div_1_Template, 2, 0, \"div\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.contactForm.get(\"addressLine1\")) == null ? null : tmp_0_0.hasError(\"required\"));\n  }\n}\nfunction AddOwnerComponent_div_24_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"City is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddOwnerComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtemplate(1, AddOwnerComponent_div_24_div_1_Template, 2, 0, \"div\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.contactForm.get(\"city\")) == null ? null : tmp_0_0.hasError(\"required\"));\n  }\n}\nfunction AddOwnerComponent_div_29_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"State is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddOwnerComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtemplate(1, AddOwnerComponent_div_29_div_1_Template, 2, 0, \"div\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r3.contactForm.get(\"state\")) == null ? null : tmp_0_0.hasError(\"required\"));\n  }\n}\nfunction AddOwnerComponent_div_34_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Zip is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddOwnerComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtemplate(1, AddOwnerComponent_div_34_div_1_Template, 2, 0, \"div\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r4.contactForm.get(\"zip\")) == null ? null : tmp_0_0.hasError(\"required\"));\n  }\n}\nfunction AddOwnerComponent_div_40_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Country is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddOwnerComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtemplate(1, AddOwnerComponent_div_40_div_1_Template, 2, 0, \"div\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r5.contactForm.get(\"country\")) == null ? null : tmp_0_0.hasError(\"required\"));\n  }\n}\nfunction AddOwnerComponent_div_45_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Phone Number is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddOwnerComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtemplate(1, AddOwnerComponent_div_45_div_1_Template, 2, 0, \"div\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r6.contactForm.get(\"phoneNumber\")) == null ? null : tmp_0_0.hasError(\"required\"));\n  }\n}\nexport class AddOwnerComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.buildForm();\n  }\n  buildForm() {\n    this.contactForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      address: ['', Validators.required],\n      phoneNumber: ['', Validators.required],\n      emailAddress: ['']\n    });\n  }\n  onSubmit() {\n    if (this.contactForm.valid) {\n      // Handle form submission logic, e.g., send data to backend API\n      console.log('Form submitted with values:', this.contactForm.value);\n      // Reset the form after submission (optional)\n      this.contactForm.reset();\n    } else {\n      // Mark all fields as touched to display validation errors\n      this.markFormGroupTouched(this.contactForm);\n    }\n  }\n  // Utility method to mark all fields as touched to display validation errors\n  markFormGroupTouched(formGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function AddOwnerComponent_Factory(t) {\n    return new (t || AddOwnerComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddOwnerComponent,\n    selectors: [[\"app-add-owner\"]],\n    decls: 55,\n    vars: 8,\n    consts: [[1, \"container\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"form-row\"], [1, \"form-group\", \"col-md-6\"], [\"for\", \"addressLine1\"], [\"type\", \"text\", \"id\", \"addressLine1\", \"formControlName\", \"addressLine1\", 1, \"form-control\"], [\"for\", \"addressLine2\"], [\"type\", \"text\", \"id\", \"addressLine2\", \"formControlName\", \"addressLine2\", 1, \"form-control\"], [1, \"form-group\", \"col-md-4\"], [\"for\", \"city\"], [\"type\", \"text\", \"id\", \"city\", \"formControlName\", \"city\", 1, \"form-control\"], [\"for\", \"state\"], [\"type\", \"text\", \"id\", \"state\", \"formControlName\", \"state\", 1, \"form-control\"], [\"for\", \"zip\"], [\"type\", \"text\", \"id\", \"zip\", \"formControlName\", \"zip\", 1, \"form-control\"], [\"for\", \"country\"], [\"type\", \"text\", \"id\", \"country\", \"formControlName\", \"country\", 1, \"form-control\"], [\"for\", \"phoneNumber\"], [\"type\", \"text\", \"id\", \"phoneNumber\", \"formControlName\", \"phoneNumber\", 1, \"form-control\"], [\"for\", \"emailAddress\"], [\"type\", \"email\", \"id\", \"emailAddress\", \"formControlName\", \"emailAddress\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mr-2\"], [\"routerLink\", \"/owners\", 1, \"btn\", \"btn-outline-secondary\"], [1, \"fas\", \"fa-arrow-left\", \"mr-1\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n    template: function AddOwnerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Owner Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AddOwnerComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵtemplate(8, AddOwnerComponent_div_8_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"div\", 7)(11, \"label\", 8);\n        i0.ɵɵtext(12, \"Address Line 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 9);\n        i0.ɵɵtemplate(14, AddOwnerComponent_div_14_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 7)(16, \"label\", 10);\n        i0.ɵɵtext(17, \"Address Line 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 6)(20, \"div\", 12)(21, \"label\", 13);\n        i0.ɵɵtext(22, \"City\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 14);\n        i0.ɵɵtemplate(24, AddOwnerComponent_div_24_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 12)(26, \"label\", 15);\n        i0.ɵɵtext(27, \"State\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 16);\n        i0.ɵɵtemplate(29, AddOwnerComponent_div_29_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 12)(31, \"label\", 17);\n        i0.ɵɵtext(32, \"Zip\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 18);\n        i0.ɵɵtemplate(34, AddOwnerComponent_div_34_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"div\", 6)(36, \"div\", 7)(37, \"label\", 19);\n        i0.ɵɵtext(38, \"Country\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"input\", 20);\n        i0.ɵɵtemplate(40, AddOwnerComponent_div_40_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"div\", 7)(42, \"label\", 21);\n        i0.ɵɵtext(43, \"Phone Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(44, \"input\", 22);\n        i0.ɵɵtemplate(45, AddOwnerComponent_div_45_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(46, \"div\", 2)(47, \"label\", 23);\n        i0.ɵɵtext(48, \"Email Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(49, \"input\", 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"button\", 25);\n        i0.ɵɵtext(51, \"Save Contact Information\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"a\", 26);\n        i0.ɵɵelement(53, \"i\", 27);\n        i0.ɵɵtext(54, \" Back to Owner List \");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        let tmp_4_0;\n        let tmp_5_0;\n        let tmp_6_0;\n        let tmp_7_0;\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.contactForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.contactForm.get(\"name\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.contactForm.get(\"name\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.contactForm.get(\"name\")) == null ? null : tmp_1_0.touched)));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.contactForm.get(\"addressLine1\")) == null ? null : tmp_2_0.invalid) && (((tmp_2_0 = ctx.contactForm.get(\"addressLine1\")) == null ? null : tmp_2_0.dirty) || ((tmp_2_0 = ctx.contactForm.get(\"addressLine1\")) == null ? null : tmp_2_0.touched)));\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.contactForm.get(\"city\")) == null ? null : tmp_3_0.invalid) && (((tmp_3_0 = ctx.contactForm.get(\"city\")) == null ? null : tmp_3_0.dirty) || ((tmp_3_0 = ctx.contactForm.get(\"city\")) == null ? null : tmp_3_0.touched)));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.contactForm.get(\"state\")) == null ? null : tmp_4_0.invalid) && (((tmp_4_0 = ctx.contactForm.get(\"state\")) == null ? null : tmp_4_0.dirty) || ((tmp_4_0 = ctx.contactForm.get(\"state\")) == null ? null : tmp_4_0.touched)));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.contactForm.get(\"zip\")) == null ? null : tmp_5_0.invalid) && (((tmp_5_0 = ctx.contactForm.get(\"zip\")) == null ? null : tmp_5_0.dirty) || ((tmp_5_0 = ctx.contactForm.get(\"zip\")) == null ? null : tmp_5_0.touched)));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.contactForm.get(\"country\")) == null ? null : tmp_6_0.invalid) && (((tmp_6_0 = ctx.contactForm.get(\"country\")) == null ? null : tmp_6_0.dirty) || ((tmp_6_0 = ctx.contactForm.get(\"country\")) == null ? null : tmp_6_0.touched)));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.contactForm.get(\"phoneNumber\")) == null ? null : tmp_7_0.invalid) && (((tmp_7_0 = ctx.contactForm.get(\"phoneNumber\")) == null ? null : tmp_7_0.dirty) || ((tmp_7_0 = ctx.contactForm.get(\"phoneNumber\")) == null ? null : tmp_7_0.touched)));\n      }\n    },\n    dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i3.RouterLink, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AddOwnerComponent_div_8_div_1_Template","ɵɵadvance","ɵɵproperty","tmp_0_0","ctx_r0","contactForm","get","hasError","AddOwnerComponent_div_14_div_1_Template","ctx_r1","AddOwnerComponent_div_24_div_1_Template","ctx_r2","AddOwnerComponent_div_29_div_1_Template","ctx_r3","AddOwnerComponent_div_34_div_1_Template","ctx_r4","AddOwnerComponent_div_40_div_1_Template","ctx_r5","AddOwnerComponent_div_45_div_1_Template","ctx_r6","AddOwnerComponent","constructor","formBuilder","ngOnInit","buildForm","group","name","required","address","phoneNumber","emailAddress","onSubmit","valid","console","log","value","reset","markFormGroupTouched","formGroup","Object","values","controls","forEach","control","markAsTouched","_","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","AddOwnerComponent_Template","rf","ctx","ɵɵlistener","AddOwnerComponent_Template_form_ngSubmit_3_listener","ɵɵelement","AddOwnerComponent_div_8_Template","AddOwnerComponent_div_14_Template","AddOwnerComponent_div_24_Template","AddOwnerComponent_div_29_Template","AddOwnerComponent_div_34_Template","AddOwnerComponent_div_40_Template","AddOwnerComponent_div_45_Template","tmp_1_0","invalid","dirty","touched","tmp_2_0","tmp_3_0","tmp_4_0","tmp_5_0","tmp_6_0","tmp_7_0"],"sources":["E:\\pets-appoinments-app\\src\\app\\add-owner\\add-owner.component.ts","E:\\pets-appoinments-app\\src\\app\\add-owner\\add-owner.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-owner',\n  templateUrl: './add-owner.component.html',\n  styleUrls: ['./add-owner.component.css']\n})\nexport class AddOwnerComponent implements OnInit {\n  contactForm!: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.buildForm();\n  }\n\n  buildForm(): void {\n    this.contactForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      address: ['', Validators.required],\n      phoneNumber: ['', Validators.required],\n      emailAddress: [''] \n    });\n  }\n\n  onSubmit(): void {\n    if (this.contactForm.valid) {\n      // Handle form submission logic, e.g., send data to backend API\n      console.log('Form submitted with values:', this.contactForm.value);\n      // Reset the form after submission (optional)\n      this.contactForm.reset();\n    } else {\n      // Mark all fields as touched to display validation errors\n      this.markFormGroupTouched(this.contactForm);\n    }\n  }\n\n  // Utility method to mark all fields as touched to display validation errors\n  markFormGroupTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n}","<div class=\"container\">\n    <h2>Owner Form</h2>\n    <form [formGroup]=\"contactForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" id=\"name\" class=\"form-control\" formControlName=\"name\">\n        <div *ngIf=\"contactForm.get('name')?.invalid && (contactForm.get('name')?.dirty || contactForm.get('name')?.touched)\"\n          class=\"invalid-feedback\">\n          <div *ngIf=\"contactForm.get('name')?.hasError('required')\">Name is required.</div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <label for=\"addressLine1\">Address Line 1</label>\n          <input type=\"text\" id=\"addressLine1\" class=\"form-control\" formControlName=\"addressLine1\">\n          <div *ngIf=\"contactForm.get('addressLine1')?.invalid && (contactForm.get('addressLine1')?.dirty || contactForm.get('addressLine1')?.touched)\"\n            class=\"invalid-feedback\">\n            <div *ngIf=\"contactForm.get('addressLine1')?.hasError('required')\">Address Line 1 is required.</div>\n          </div>\n        </div>\n        <div class=\"form-group col-md-6\">\n          <label for=\"addressLine2\">Address Line 2</label>\n          <input type=\"text\" id=\"addressLine2\" class=\"form-control\" formControlName=\"addressLine2\">\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-4\">\n          <label for=\"city\">City</label>\n          <input type=\"text\" id=\"city\" class=\"form-control\" formControlName=\"city\">\n          <div *ngIf=\"contactForm.get('city')?.invalid && (contactForm.get('city')?.dirty || contactForm.get('city')?.touched)\"\n            class=\"invalid-feedback\">\n            <div *ngIf=\"contactForm.get('city')?.hasError('required')\">City is required.</div>\n          </div>\n        </div>\n        <div class=\"form-group col-md-4\">\n          <label for=\"state\">State</label>\n          <input type=\"text\" id=\"state\" class=\"form-control\" formControlName=\"state\">\n          <div *ngIf=\"contactForm.get('state')?.invalid && (contactForm.get('state')?.dirty || contactForm.get('state')?.touched)\"\n            class=\"invalid-feedback\">\n            <div *ngIf=\"contactForm.get('state')?.hasError('required')\">State is required.</div>\n          </div>\n        </div>\n        <div class=\"form-group col-md-4\">\n          <label for=\"zip\">Zip</label>\n          <input type=\"text\" id=\"zip\" class=\"form-control\" formControlName=\"zip\">\n          <div *ngIf=\"contactForm.get('zip')?.invalid && (contactForm.get('zip')?.dirty || contactForm.get('zip')?.touched)\"\n            class=\"invalid-feedback\">\n            <div *ngIf=\"contactForm.get('zip')?.hasError('required')\">Zip is required.</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n          <label for=\"country\">Country</label>\n          <input type=\"text\" id=\"country\" class=\"form-control\" formControlName=\"country\">\n          <div *ngIf=\"contactForm.get('country')?.invalid && (contactForm.get('country')?.dirty || contactForm.get('country')?.touched)\"\n            class=\"invalid-feedback\">\n            <div *ngIf=\"contactForm.get('country')?.hasError('required')\">Country is required.</div>\n          </div>\n        </div>\n        <div class=\"form-group col-md-6\">\n          <label for=\"phoneNumber\">Phone Number</label>\n          <input type=\"text\" id=\"phoneNumber\" class=\"form-control\" formControlName=\"phoneNumber\">\n          <div *ngIf=\"contactForm.get('phoneNumber')?.invalid && (contactForm.get('phoneNumber')?.dirty || contactForm.get('phoneNumber')?.touched)\"\n            class=\"invalid-feedback\">\n            <div *ngIf=\"contactForm.get('phoneNumber')?.hasError('required')\">Phone Number is required.</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"emailAddress\">Email Address</label>\n        <input type=\"email\" id=\"emailAddress\" class=\"form-control\" formControlName=\"emailAddress\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary mr-2\">Save Contact Information</button>\n      <a routerLink=\"/owners\" class=\"btn btn-outline-secondary\">\n        <i class=\"fas fa-arrow-left mr-1\"></i> Back to Owner List\n      </a>\n    </form>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}