{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AddPetTypeComponent = class AddPetTypeComponent {\n  constructor(fb, router) {\n    this.fb = fb;\n    this.router = router;\n    this.newForm = this.fb.group({\n      name: ['', Validators.required]\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    if (this.newForm.valid) {\n      // Simulate saving the pet type data\n      console.log('Pet Type data:', this.newForm.value);\n      this.router.navigate(['/pet-types']);\n    } else {\n      Object.keys(this.newForm.controls).forEach(field => {\n        const control = this.newForm.get(field);\n        control?.markAsTouched({\n          onlySelf: true\n        });\n      });\n    }\n  }\n};\nAddPetTypeComponent = __decorate([Component({\n  selector: 'app-add-pet-type',\n  templateUrl: './add-pet-type.component.html',\n  styleUrls: ['./add-pet-type.component.css']\n})], AddPetTypeComponent);","map":{"version":3,"names":["Component","AddPetTypeComponent","constructor","fb","router","newForm","group","name","Validators","required","ngOnInit","onSubmit","valid","console","log","value","navigate","Object","keys","controls","forEach","field","control","get","markAsTouched","onlySelf","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\pets-appoinments-app\\src\\app\\add-pet-type\\add-pet-type.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-add-pet-type',\n  templateUrl: './add-pet-type.component.html',\n  styleUrls: ['./add-pet-type.component.css']\n})\nexport class AddPetTypeComponent implements OnInit {\n  newForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private router: Router) {\n    this.newForm = this.fb.group({\n      name: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onSubmit(): void {\n    if (this.newForm.valid) {\n      // Simulate saving the pet type data\n      console.log('Pet Type data:', this.newForm.value);\n      this.router.navigate(['/pet-types']);\n    } else {\n      Object.keys(this.newForm.controls).forEach(field => {\n        const control = this.newForm.get(field);\n        control?.markAsTouched({ onlySelf: true });\n      });\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAG9BC,YAAoBC,EAAe,EAAUC,MAAc;IAAvC,KAAAD,EAAE,GAAFA,EAAE;IAAuB,KAAAC,MAAM,GAANA,MAAM;IACjD,IAAI,CAACC,OAAO,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC3BC,IAAI,EAAE,CAAC,EAAE,EAAEC,UAAU,CAACC,QAAQ;KAC/B,CAAC;EACJ;EAEAC,QAAQA,CAAA,GAAU;EAElBC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACN,OAAO,CAACO,KAAK,EAAE;MACtB;MACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACT,OAAO,CAACU,KAAK,CAAC;MACjD,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;KACrC,MAAM;MACLC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACb,OAAO,CAACc,QAAQ,CAAC,CAACC,OAAO,CAACC,KAAK,IAAG;QACjD,MAAMC,OAAO,GAAG,IAAI,CAACjB,OAAO,CAACkB,GAAG,CAACF,KAAK,CAAC;QACvCC,OAAO,EAAEE,aAAa,CAAC;UAAEC,QAAQ,EAAE;QAAI,CAAE,CAAC;MAC5C,CAAC,CAAC;;EAEN;CACD;AAvBYxB,mBAAmB,GAAAyB,UAAA,EAL/B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACW5B,mBAAmB,CAuB/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}