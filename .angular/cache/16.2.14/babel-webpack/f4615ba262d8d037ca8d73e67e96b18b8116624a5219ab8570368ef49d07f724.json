{"ast":null,"code":"import { catchError, map } from 'rxjs/operators';\nimport { BaseService } from './BaseService.services';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AddressService extends BaseService {\n  constructor(http) {\n    super(http);\n    this.http = http;\n  }\n  getAddress(addressId) {\n    return this.get(`addresses/${addressId}`).pipe(map(response => response.data), catchError(this.handleError));\n  }\n  createAddress(address) {\n    return this.post('addresses', address).pipe(map(response => response.data), catchError(this.handleError));\n  }\n  updateAddress(address) {\n    return this.put(`addresses/${address.id}`, address).pipe(map(response => response.data), catchError(this.handleError));\n  }\n  deletePetOwner(addressId) {\n    return this.delete(`addresses/${addressId}`).pipe(map(response => response.data), catchError(this.handleError));\n  }\n  static #_ = this.ɵfac = function AddressService_Factory(t) {\n    return new (t || AddressService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AddressService,\n    factory: AddressService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["catchError","map","BaseService","AddressService","constructor","http","getAddress","addressId","get","pipe","response","data","handleError","createAddress","address","post","updateAddress","put","id","deletePetOwner","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\pets-appoinments-app\\src\\app\\services\\Address.services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { BaseService } from './BaseService.services';\r\nimport { APIResponseModel, AddressResponseModel } from '../models/response.models';\r\nimport { AddressRequestModel } from '../models/request.models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddressService extends BaseService {\r\n\r\n  constructor(public override http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  getAddress(addressId: number): Observable<AddressResponseModel> {\r\n    return this.get<APIResponseModel<AddressResponseModel>>(`addresses/${addressId}`)\r\n      .pipe(\r\n        map(response => response.data as AddressResponseModel),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  createAddress(address: AddressRequestModel): Observable<AddressResponseModel> {\r\n    return this.post<APIResponseModel<AddressResponseModel>>('addresses', address)\r\n      .pipe(\r\n        map(response => response.data as AddressResponseModel),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  updateAddress(address: AddressRequestModel): Observable<boolean> {\r\n    return this.put<APIResponseModel<boolean>>(`addresses/${address.id}`, address)\r\n      .pipe(\r\n        map(response => response.data as boolean),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  deletePetOwner(addressId: number): Observable<boolean> {\r\n    return this.delete<APIResponseModel<boolean>>(`addresses/${addressId}`)\r\n      .pipe(\r\n        map(response => response.data as boolean),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  // Add other methods as needed\r\n}\r\n"],"mappings":"AAGA,SAASA,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;AAChD,SAASC,WAAW,QAAQ,wBAAwB;;;AAOpD,OAAM,MAAOC,cAAe,SAAQD,WAAW;EAE7CE,YAA4BC,IAAgB;IAC1C,KAAK,CAACA,IAAI,CAAC;IADe,KAAAA,IAAI,GAAJA,IAAI;EAEhC;EAEAC,UAAUA,CAACC,SAAiB;IAC1B,OAAO,IAAI,CAACC,GAAG,CAAyC,aAAaD,SAAS,EAAE,CAAC,CAC9EE,IAAI,CACHR,GAAG,CAACS,QAAQ,IAAIA,QAAQ,CAACC,IAA4B,CAAC,EACtDX,UAAU,CAAC,IAAI,CAACY,WAAW,CAAC,CAC7B;EACL;EAEAC,aAAaA,CAACC,OAA4B;IACxC,OAAO,IAAI,CAACC,IAAI,CAAyC,WAAW,EAAED,OAAO,CAAC,CAC3EL,IAAI,CACHR,GAAG,CAACS,QAAQ,IAAIA,QAAQ,CAACC,IAA4B,CAAC,EACtDX,UAAU,CAAC,IAAI,CAACY,WAAW,CAAC,CAC7B;EACL;EAEAI,aAAaA,CAACF,OAA4B;IACxC,OAAO,IAAI,CAACG,GAAG,CAA4B,aAAaH,OAAO,CAACI,EAAE,EAAE,EAAEJ,OAAO,CAAC,CAC3EL,IAAI,CACHR,GAAG,CAACS,QAAQ,IAAIA,QAAQ,CAACC,IAAe,CAAC,EACzCX,UAAU,CAAC,IAAI,CAACY,WAAW,CAAC,CAC7B;EACL;EAEAO,cAAcA,CAACZ,SAAiB;IAC9B,OAAO,IAAI,CAACa,MAAM,CAA4B,aAAab,SAAS,EAAE,CAAC,CACpEE,IAAI,CACHR,GAAG,CAACS,QAAQ,IAAIA,QAAQ,CAACC,IAAe,CAAC,EACzCX,UAAU,CAAC,IAAI,CAACY,WAAW,CAAC,CAC7B;EACL;EAAC,QAAAS,CAAA,G;qBApCUlB,cAAc,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdvB,cAAc;IAAAwB,OAAA,EAAdxB,cAAc,CAAAyB,IAAA;IAAAC,UAAA,EAFb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}